[{"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\index.js":"1","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\App.js":"2","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Login.js":"3","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Navbar.js":"4","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\ProtectedRoute.js":"5","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Register.js":"6","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Info.js":"7","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Todos.js":"8","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Posts.js":"9","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Error.js":"10","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Comments.js":"11","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\index.js":"12","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\App.js":"13","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Login.js":"14","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\ProtectedRoute.js":"15","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Navbar.js":"16","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Register.js":"17","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Todos.js":"18","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Posts.js":"19","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Info.js":"20","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Error.js":"21","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Comments.js":"22"},{"size":212,"mtime":1686066387160,"results":"23","hashOfConfig":"24"},{"size":2026,"mtime":1687275661228,"results":"25","hashOfConfig":"24"},{"size":2309,"mtime":1687275661229,"results":"26","hashOfConfig":"24"},{"size":821,"mtime":1687256971427,"results":"27","hashOfConfig":"24"},{"size":234,"mtime":1687256971428,"results":"28","hashOfConfig":"24"},{"size":2247,"mtime":1687275548306,"results":"29","hashOfConfig":"24"},{"size":909,"mtime":1687256971431,"results":"30","hashOfConfig":"24"},{"size":7907,"mtime":1687291195776,"results":"31","hashOfConfig":"24"},{"size":7420,"mtime":1687293408739,"results":"32","hashOfConfig":"24"},{"size":491,"mtime":1686066387162,"results":"33","hashOfConfig":"24"},{"size":3255,"mtime":1687275357179,"results":"34","hashOfConfig":"24"},{"size":212,"mtime":1686066387160,"results":"35","hashOfConfig":"36"},{"size":2026,"mtime":1687275661228,"results":"37","hashOfConfig":"36"},{"size":2309,"mtime":1687275661229,"results":"38","hashOfConfig":"36"},{"size":234,"mtime":1687256971428,"results":"39","hashOfConfig":"36"},{"size":821,"mtime":1687256971427,"results":"40","hashOfConfig":"36"},{"size":2247,"mtime":1687275548306,"results":"41","hashOfConfig":"36"},{"size":7907,"mtime":1687291195776,"results":"42","hashOfConfig":"36"},{"size":7420,"mtime":1687293408739,"results":"43","hashOfConfig":"36"},{"size":909,"mtime":1687256971431,"results":"44","hashOfConfig":"36"},{"size":491,"mtime":1686066387162,"results":"45","hashOfConfig":"36"},{"size":3255,"mtime":1687275357179,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cj2yrx",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8m0cfa",{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\index.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\App.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Login.js",["117"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ setUsername }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  if (localStorage.getItem(\"currentUser\")) {\r\n    localStorage.clear();\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !password) {\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/login\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          throw \"Wrong username or password\";\r\n        }\r\n      })\r\n      .then((user) => {\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        setUsername(name);\r\n        navigate(`/users/${name}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>LOGIN</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          LOGIN\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/register\">\r\n          REGISTER\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Navbar.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\ProtectedRoute.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Register.js",["118"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\n\r\nfunction Register({ setUsername }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !password) {\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/register\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 409) {\r\n          throw \"Username or password already exists\";\r\n        }\r\n      })\r\n      .then((user) => {\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        setUsername(name);\r\n        navigate(`/users/${name}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>REGISTER</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          REGISTER\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/login\">\r\n          LOGIN\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Register;","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Info.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Todos.js",["119","120"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nimport styles from \"./Todos.module.css\";\r\n\r\nfunction Todos() {\r\n  const [Todos, setTodos] = useState([]);//רשימה של כל הטודוס\r\n  const [editingTodoId, setEditingTodoId] = useState(null);//שומר את מספר הכותרת שעושים עליה שינוי\r\n  const [editTitle, setEditTitle] = useState(null);//השינוי שעושים לכותרת\r\n  const [newTodo, setnewTodo] = useState([]);//תוכן של טודו חדש\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\r\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));//כל הרשימה המעודכנת עד עכשיו\r\n  const todosComp = JSON.parse(localStorage.getItem(\"compTodos\"));//במידה והוסיפו גם את המשימות שבוצעו כדי לגעת שבוצעו\r\n\r\n  useEffect(() => {\r\n    if (!todos) {\r\n      const temp = getComp(0);\r\n      temp.then(data => setTodos(data));\r\n    }\r\n    else {\r\n      setTodos(todos)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n  }, [Todos]);\r\n\r\n  //פונקציה ששולפת את כל המשימות שהמצב שלהן COMP \r\n  const getComp = async (comp) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}/${comp}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const newData = await response.json();\r\n        return newData;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch todos:', error.message);\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        await setTodos((prevTodos) => {\r\n          return prevTodos.filter(todo => todo.id !== id);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async (id, title, c) => {\r\n    if (editingTodoId != null) {\r\n      try {\r\n        const todo = {\r\n          userId: usern.id,\r\n          id: editingTodoId,\r\n          title: editTitle,\r\n          completed: c ? 1 : 0\r\n        };\r\n        console.log(todo);\r\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(todo)\r\n        });\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          await setTodos(prevTodos => {\r\n            return prevTodos.map(todo => {\r\n              if (todo.id === updatedTodo.id) {\r\n                return updatedTodo;\r\n              }\r\n              return todo;\r\n            });\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating data:\", error);\r\n        navigate(\"/error\");\r\n      } finally {\r\n        setEditingTodoId(null);\r\n        setEditTitle(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckChange = async (id, title, completed) => {\r\n    if (!todosComp) {//במצב בו עוד לא מוצגות המשימות שבוצעו\r\n      await setTodos((prevTodos) => {\r\n        return prevTodos.filter(todo => todo.id !== id);\r\n      });\r\n    }\r\n    try {\r\n      const todo = {\r\n        userId: usern.id,\r\n        id: id,\r\n        title: title,\r\n        completed: completed\r\n      };\r\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(todo)\r\n      });\r\n      if (response.ok) {\r\n        const updatedTodo = await response.json();\r\n        await setTodos(prevTodos => {\r\n          return prevTodos.map(todo => {\r\n            if (todo.id === updatedTodo.id) {\r\n              return updatedTodo;\r\n            }\r\n            return todo;\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  }\r\n\r\n  const handleEdit = async (id, title) => {\r\n    setEditingTodoId(id);\r\n    setEditTitle(title);\r\n  };\r\n\r\n  const addTodo = async () => {\r\n    if (newTodo.trim() !== '') {\r\n      try {\r\n        const todo = {\r\n          userId: usern.id,\r\n          id: 0,\r\n          title: newTodo,\r\n          completed: 0\r\n        };\r\n        const response = await fetch(`http://localhost:3000/todos`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(todo)\r\n        });\r\n        console.log(response);\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          await setTodos(prevTodos => [...prevTodos, updatedTodo]);\r\n          setnewTodo('');\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating data:\", error);\r\n        navigate(\"/error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //מוסיף את המשימות שבוצעו\r\n  const showCompleted = async () => {\r\n    if (!todosComp) {\r\n      const temp = getComp(1);\r\n      temp.then(data => {\r\n        const mergedTodos = Todos.concat(data);\r\n        mergedTodos.sort((a, b) => a.id - b.id);\r\n        localStorage.setItem(\"compTodos\", JSON.stringify(mergedTodos));\r\n        setTodos(mergedTodos)\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={styles[\"todos-select\"]}>\r\n      <div className={styles[\"lists\"]}>\r\n        <div className={styles[\"todos-list\"]}>\r\n          <input\r\n            type=\"text\"\r\n            value={newTodo}\r\n            onChange={e => setnewTodo(e.target.value)}\r\n          />\r\n          <button onClick={addTodo}>Add Todo</button>\r\n          {Todos.map(todo => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleCheckChange(todo.id, todo.title, !todo.completed)}\r\n                />\r\n                <span className={todo.completed ? '' : 'completed'}>\r\n                  {editingTodoId === todo.id ? (\r\n                    <input\r\n                      className={styles[\"todos-input\"]}\r\n                      type=\"text\"\r\n                      value={editTitle}\r\n                      onChange={(e) => setEditTitle(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    todo.title\r\n                  )}\r\n                </span>\r\n                <div className=\"buttons\">\r\n                  <button onClick={() => handleDelete(todo.id)}>\r\n                    <FaTrash />\r\n                  </button>\r\n                  <button onClick={() => handleEdit(todo.id, todo.title)}>\r\n                    <FaEdit />\r\n                  </button>\r\n                  <button onClick={() => handleSave(todo.id, todo.title, todo.completed)}>\r\n                    <FaSave />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {!todosComp ? (\r\n            <button onClick={() => showCompleted()}>\r\n              SHOW COMPLETED\r\n            </button>\r\n          ) : (\r\n            <h2>this is all users todo</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Posts.js",["121","122","123"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nimport styles from \"./Posts.module.css\";\r\nimport Comments from \"./Comments\";\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [commentsPost, setCommentsPost] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(-1);\r\n\r\n  const navigate = useNavigate();\r\n  const scrollRef = useRef(null);\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  useEffect(() => {\r\n    let savedPosts = localStorage.getItem(\"posts\");\r\n    if (!savedPosts) {\r\n      const url = `http://localhost:3000/posts?userId=${user.id}&_sort=id`;\r\n      getData(url, setPosts);\r\n      localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n    } else {\r\n      setPosts(JSON.parse(savedPosts));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    if (commentsPost) {\r\n      localStorage.setItem(`comments${commentsPost}`, JSON.stringify(comments));\r\n    }\r\n  }, [comments]);\r\n\r\n  useEffect(() => {\r\n    let savedComments = localStorage.getItem(`comments${commentsPost}`);\r\n    if (!savedComments) {\r\n      const url = `http://localhost:3000/comments?postId=${commentsPost}&_sort=id`;\r\n      getData(url, setComments);\r\n      if (commentsPost) {\r\n        localStorage.setItem(\r\n          `comments${commentsPost}`,\r\n          JSON.stringify(comments)\r\n        );\r\n      }\r\n    } else {\r\n      setComments(JSON.parse(savedComments));\r\n    }\r\n  }, [commentsPost]);\r\n\r\n  const getData = async (url, setData) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data))\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        navigate(\"/error\");\r\n      });\r\n  };\r\n\r\n  const addData = async (url, data, setData) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.status === 200) {\r\n        const newData = await response.json();\r\n        setData((prevData) => [...prevData, newData]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding new data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const editData = async (url, data, setData) => {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.status === 200) {\r\n        const updatedRecord = await response.json();\r\n        setData((prevData) => {\r\n          return prevData.map((record) => {\r\n            if (record.id === updatedRecord.id) {\r\n              return updatedRecord;\r\n            }\r\n            return record;\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const deleteData = async (url, recordId, setData) => {\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.ok) {\r\n        setData((prevData) => {\r\n          return prevData.filter((record) => record.id !== recordId);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const handleComments = async (postId) => {\r\n    if (commentsPost === postId) {\r\n      setCommentsPost(null);\r\n      setComments([]);\r\n    } else {\r\n      setCommentsPost(postId);\r\n    }\r\n\r\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n\r\n  const addPost = async () => {\r\n    let title = document.getElementById(\"title\").value;\r\n    let body = document.getElementById(\"body\").value;\r\n    if (!title || !body) {\r\n      alert(\"Title or body are empty\");\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/posts\";\r\n    const post = {\r\n      userId: user.id,\r\n      title: title,\r\n      body: body,\r\n    };\r\n    await addData(url, post, setPosts);\r\n    alert(\"Added successfully!\");\r\n  };\r\n\r\n  const editPost = async (postId) => {\r\n    let title = document.getElementById(\"updatedTitle\").value;\r\n    let body = document.getElementById(\"updatedBody\").value;\r\n    if (!title || !body) {\r\n      alert(\"Title or body are empty\");\r\n      return;\r\n    }\r\n\r\n    const url = `http://localhost:3000/posts/${postId}`;\r\n    const post = {\r\n      id: postId,\r\n      userId: user.id,\r\n      title: title,\r\n      body: body,\r\n    };\r\n    editData(url, post, setPosts);\r\n    setIsEdit(-1);\r\n  };\r\n\r\n  const deletePost = async (postId) => {\r\n    const url = `http://localhost:3000/posts/${postId}`;\r\n    deleteData(url, postId, setPosts);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.posts} ref={scrollRef}>\r\n      <div className={styles[\"new-post\"]}>\r\n        <textarea id=\"title\" placeholder=\"Title\"></textarea>\r\n        <textarea id=\"body\" placeholder=\"Body\"></textarea>\r\n        <button onClick={addPost}>Add Post</button>\r\n      </div>\r\n      <div className={styles[\"grid-container\"]}>\r\n        {posts.map((post) => (\r\n          <div\r\n            className={`${styles[\"post-card\"]} ${\r\n              commentsPost === post.id ? styles.singleColumn : \"\"\r\n            }`}\r\n            key={post.id}\r\n          >\r\n            <div>\r\n              {isEdit === post.id ? (\r\n                <div className={styles[\"edit-post\"]}>\r\n                  <section className={styles[\"edit-input\"]}>\r\n                    <input id=\"updatedTitle\" defaultValue={post.title} />\r\n                    <textarea id=\"updatedBody\" defaultValue={post.body} />\r\n                  </section>\r\n                  <button onClick={() => editPost(post.id)}>Save</button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <h5>{`${post.id}. ${post.title}`}</h5>\r\n                  <p>{post.body}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className={styles[\"post-btns\"]}>\r\n              <button onClick={() => setIsEdit(post.id)}>Edit</button>\r\n              <button onClick={() => deletePost(post.id)}>Delete</button>\r\n              <button\r\n                className={styles[\"comments-btn\"]}\r\n                onClick={() => handleComments(post.id)}\r\n              >\r\n                {commentsPost === post.id\r\n                  ? \"Hide Comments\"\r\n                  : \"Display Comments\"}\r\n              </button>\r\n            </div>\r\n            {commentsPost === post.id && (\r\n              <Comments\r\n                comments={comments}\r\n                postId={post.id}\r\n                setComments={setComments}\r\n                dataHandlers={{ addData, editData, deleteData }}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Error.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Comments.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\index.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\App.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Login.js",["124"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\ProtectedRoute.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Navbar.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Register.js",["125"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Todos.js",["126","127"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Posts.js",["128","129","130"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Info.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Error.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Comments.js",[],[],{"ruleId":"131","severity":1,"message":"132","line":36,"column":11,"nodeType":"133","messageId":"134","endLine":36,"endColumn":46},{"ruleId":"131","severity":1,"message":"132","line":32,"column":11,"nodeType":"133","messageId":"134","endLine":32,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":27,"column":6,"nodeType":"141","endLine":27,"endColumn":8,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":27,"column":6,"nodeType":"141","endLine":27,"endColumn":8,"suggestions":"144"},{"ruleId":"139","severity":1,"message":"145","line":37,"column":6,"nodeType":"141","endLine":37,"endColumn":16,"suggestions":"146"},{"ruleId":"139","severity":1,"message":"147","line":53,"column":6,"nodeType":"141","endLine":53,"endColumn":20,"suggestions":"148"},{"ruleId":"131","severity":1,"message":"132","line":36,"column":11,"nodeType":"133","messageId":"134","endLine":36,"endColumn":46},{"ruleId":"131","severity":1,"message":"132","line":32,"column":11,"nodeType":"133","messageId":"134","endLine":32,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":27,"column":6,"nodeType":"141","endLine":27,"endColumn":8,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"143","line":27,"column":6,"nodeType":"141","endLine":27,"endColumn":8,"suggestions":"150"},{"ruleId":"139","severity":1,"message":"145","line":37,"column":6,"nodeType":"141","endLine":37,"endColumn":16,"suggestions":"151"},{"ruleId":"139","severity":1,"message":"147","line":53,"column":6,"nodeType":"141","endLine":53,"endColumn":20,"suggestions":"152"},"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getComp' and 'todos'. Either include them or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has missing dependencies: 'getData', 'posts', and 'user.id'. Either include them or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'commentsPost'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has missing dependencies: 'comments' and 'getData'. Either include them or remove the dependency array.",["156"],["157"],["158"],["159"],["160"],{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"161","fix":"169"},{"desc":"163","fix":"170"},{"desc":"165","fix":"171"},{"desc":"167","fix":"172"},"Update the dependencies array to be: [getComp, todos]",{"range":"173","text":"174"},"Update the dependencies array to be: [getData, posts, user.id]",{"range":"175","text":"176"},"Update the dependencies array to be: [comments, commentsPost]",{"range":"177","text":"178"},"Update the dependencies array to be: [comments, commentsPost, getData]",{"range":"179","text":"180"},{"range":"181","text":"174"},{"range":"182","text":"176"},{"range":"183","text":"178"},{"range":"184","text":"180"},[1025,1027],"[getComp, todos]",[899,901],"[getData, posts, user.id]",[1145,1155],"[comments, commentsPost]",[1628,1642],"[comments, commentsPost, getData]",[1025,1027],[899,901],[1145,1155],[1628,1642]]