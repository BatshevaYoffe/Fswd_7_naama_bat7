[{"C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\index.js":"1","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\App.js":"2","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\Login.js":"3","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\ProtectedRoute.js":"4","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\Navbar.js":"5","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\Register.js":"6","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\contactTheManager.js":"7","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\myBooks.js":"8","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\findBook.js":"9","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\orderBasket.js":"10","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\info.js":"11","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\addNewBook.js":"12","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\createNewBook.js":"13"},{"size":212,"mtime":1690186918566,"results":"14","hashOfConfig":"15"},{"size":2972,"mtime":1690722818835,"results":"16","hashOfConfig":"15"},{"size":2379,"mtime":1691064906778,"results":"17","hashOfConfig":"15"},{"size":234,"mtime":1690186918562,"results":"18","hashOfConfig":"15"},{"size":1643,"mtime":1691071280902,"results":"19","hashOfConfig":"15"},{"size":4861,"mtime":1691442981687,"results":"20","hashOfConfig":"15"},{"size":234,"mtime":1690191124344,"results":"21","hashOfConfig":"15"},{"size":6734,"mtime":1691145567078,"results":"22","hashOfConfig":"15"},{"size":218,"mtime":1690190169174,"results":"23","hashOfConfig":"15"},{"size":7533,"mtime":1691336942059,"results":"24","hashOfConfig":"15"},{"size":3788,"mtime":1691064906781,"results":"25","hashOfConfig":"15"},{"size":5582,"mtime":1691064906780,"results":"26","hashOfConfig":"15"},{"size":5518,"mtime":1691351537591,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"lveoix",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\index.js",[],[],[],"C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\App.js",[],[],"C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\Login.js",["76"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ setUsername }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  if (localStorage.getItem(\"currentUser\")) {\r\n    localStorage.clear();\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !password) {\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/login\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else \r\n        //if (response.status === 401) {\r\n          throw \"Wrong username or password\";\r\n       // }\r\n      })\r\n      .then((user) => {\r\n        console.log(user);\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        setUsername(name);\r\n        console.log(user);\r\n        navigate(`/users/${name}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>LOGIN</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          LOGIN\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/register\">\r\n          REGISTER\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\ProtectedRoute.js",[],[],"C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\Navbar.js",[],[],"C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\Register.js",["77"],[],"C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\contactTheManager.js",["78","79","80","81","82","83","84"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\nfunction contactTheManager(){\r\n\r\n}\r\nexport default contactTheManager;","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\myBooks.js",["85","86","87","88","89","90","91"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState, version } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\nimport styles from \"./Info.module.css\";\r\nimport React from \"react\";\r\nfunction MyBooks(){\r\n    const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const [myBooks,setMyBooks]= useState([]);\r\n    const [findMyBooks, setFindMyBooks] = useState(false);\r\n    const [currentVolume,setCurrentVolume]=useState(-1);\r\n    const [currentReader,setCurrentReader]=useState(null)\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        debugger\r\n    const myBooksFromLocal = JSON.parse(localStorage.getItem('myBooksList'));\r\n    if (Array.isArray(myBooksFromLocal) && myBooksFromLocal.length>0) {\r\n      setMyBooks(myBooksFromLocal);\r\n      setFindMyBooks(true);\r\n    } else {\r\n      const url = `http://localhost:3000/myBooks/users/${user.id}`;\r\n\r\n      const requestMyBooks = {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n\r\n      fetch(url, requestMyBooks)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const sortedBooks = [...data].sort((a, b) => a.id - b.id);\r\n          setMyBooks(sortedBooks);\r\n          if(sortedBooks.length>0)\r\n           setFindMyBooks(true);\r\n          localStorage.setItem('myBooksList', JSON.stringify(sortedBooks));\r\n        })\r\n        .catch(() => setFindMyBooks(false));\r\n    }\r\n    console.log(findMyBooks)\r\n    },[])\r\n\r\n    const deleteBook  = (volume_id) => {\r\n\r\n    }\r\n    const showReader = (volume_id) =>{\r\n        debugger;\r\n        if(currentVolume === volume_id){\r\n            setCurrentVolume(-1); \r\n            setCurrentReader(null) ;\r\n        }\r\n        else{\r\n            const readerForVolumeFromLocal = JSON.parse(localStorage.getItem(`readerForVolume=${volume_id}`));\r\n            if(readerForVolumeFromLocal!==null){\r\n                setCurrentReader(readerForVolumeFromLocal);\r\n                console.log(readerForVolumeFromLocal)\r\n            }\r\n            else{\r\n                const url = `http://localhost:3000/myBooks/${volume_id}`;\r\n\r\n                const requestBookReader = {\r\n                    method: 'GET',\r\n                    headers: {\r\n                    'Content-Type': 'application/json',\r\n                    },\r\n                };\r\n\r\n                fetch(url, requestBookReader)\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        console.log(data[0])\r\n                    setCurrentReader(data[0]);\r\n                    localStorage.setItem(`readerForVolume=${volume_id}`, JSON.stringify(data[0]));\r\n                    })\r\n                    .catch(() => setFindMyBooks(false));\r\n\r\n            }\r\n            setCurrentVolume(volume_id);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n let myBooksHtml = null; \r\nif (findMyBooks) {\r\n    debugger  \r\n    if (myBooks.length > 0) {\r\n        myBooksHtml = myBooks.map((book) => {\r\n            if (book.availability === 0) {\r\n                return (\r\n                    <tr key={book.volume_id}>\r\n                        <td>{book.book_name}</td>\r\n                        <td>{book.author_name}</td>\r\n                        <td>{book.publication_year}</td>\r\n                        <td>\r\n                            <button onClick={() => deleteBook(book.volume_id)}>Delete book</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            } else {\r\n                return (\r\n                    <React.Fragment key={book.volume_id}>\r\n                        <tr>\r\n                            <td>{book.book_name}</td>\r\n                            <td>{book.author_name}</td>\r\n                            <td>{book.publication_year}</td>\r\n                            <td>\r\n                                <button onClick={() => deleteBook(book.volume_id)}>Delete book</button>\r\n                            </td>\r\n                            <td>\r\n                                <button onClick={() => showReader(book.volume_id)}>Who's the reader?</button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className={styles.bookReader} style={{ visibility: book.volume_id === currentVolume && currentReader !== null  && currentReader.volume_code === book.volume_id ? 'visible' : 'collapse' }}>\r\n                            <td colSpan=\"6\">\r\n\r\n                                <table>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th>Reader name</th>\r\n                                            <th>Phone</th>\r\n                                            <th>Email</th>\r\n                                            <th>Borrowed date</th>\r\n                                        </tr>\r\n                                        <tr>\r\n\r\n                                            <td>\r\n                                                {currentReader?.first_name} {currentReader?.last_name}\r\n                                            </td>\r\n                                            <td>\r\n                                                {currentReader?.phone}\r\n                                            </td>\r\n                                            <td>\r\n                                                {currentReader?.email}\r\n                                            </td>\r\n                                            <td>\r\n                                                {currentReader?.confirmation_date}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        </tr>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        });\r\n    } else {\r\n        myBooksHtml = <tr><td colSpan=\"6\">No books found.</td></tr>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {myBooksHtml !== null&&(\r\n            <div className={styles[\"user-card\"]}>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Book Name</th>\r\n                            <th>Author</th>\r\n                            <th>Publishing year</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {myBooksHtml}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n} else {\r\n    return <p>you don't have books</p>;\r\n}\r\n}\r\nexport default MyBooks","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\findBook.js",["92","93","94","95","96","97","98"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nfunction findBook(){\r\n\r\n}\r\nexport default findBook;","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\orderBasket.js",["99","100","101","102","103","104","105"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\nimport styles from \"./Info.module.css\";\r\n\r\nfunction OrderBasket(){\r\n    const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    const [myWishList,setMyWishList]=useState([]);\r\n    const [myReadingList,setMyReadingList]=useState([]);\r\n    const [FindMyWishList,setFindMyWishList]=useState(false);\r\n    const [FindMyReadingList,setFindMyReadingList]=useState(false);\r\n    \r\n    \r\n\r\n    \r\n    const updateRequest = (request_id,whatTodo) =>{\r\n      if(whatTodo=== \"returnBook\"){\r\n        console.log(\"return book\");\r\n        const updatedReadingList = myReadingList.filter(item => item.request_id !== request_id);\r\n        localStorage.setItem('myReadingList', JSON.stringify(updatedReadingList));\r\n        setMyReadingList(updatedReadingList);\r\n        if (updatedReadingList.length === 0) {\r\n          setFindMyReadingList(false);\r\n        }\r\n      }else{\r\n        if(whatTodo=\"removeFromWishList\"){\r\n          const updatedWhishList = myWishList.filter(item => item.request_id !== request_id);\r\n          localStorage.setItem('myWishList', JSON.stringify(updatedWhishList));\r\n          setMyWishList(updatedWhishList);\r\n          if (updatedWhishList.length === 0) {\r\n            setFindMyWishList(false);\r\n          }\r\n        }\r\n      }\r\n  }\r\n  \r\n //מחיקת ספר מרשימת המתנה \r\n  const deleteBookFromMyWishList =async (request_id) => {\r\n    const url = `http://localhost:3000/orderBasket/wishList/remove/${request_id}/users/${user.id}`;\r\n\r\n    const requestMyWishList = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await fetch(url, requestMyWishList);\r\n      if (res.status === 200) \r\n        updateRequest(request_id,\"removeFromWishList\");\r\n        }\r\n     catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n    //החזרה של  ספר\r\n    const returnBook = async (request_id,volume_id) => {\r\n      debugger;\r\n        const url = `http://localhost:3000/orderBasket/myReadingList/returnBook/users/${user.id}`;\r\n        const requestUpdateBooksBorrowed = {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({request_id,volume_id}),\r\n        };\r\n        try {\r\n          const res = await fetch(url, requestUpdateBooksBorrowed);\r\n          if (res.status === 200) \r\n            updateRequest(request_id,\"returnBook\");\r\n            }\r\n         catch (error) {\r\n          console.log(error);\r\n        }\r\n       \r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n    debugger\r\n    // ספרים שאני נמצא ברשימת המתנה על מנת להשאיל אותם\r\n    console.log(\"Fetching myWishList...\");\r\n    const myWishListFromLocal = JSON.parse(localStorage.getItem('myWishList'));\r\n    if (Array.isArray(myWishListFromLocal) && myWishListFromLocal.length>0) {\r\n        setMyWishList(myWishListFromLocal);\r\n        setFindMyWishList(true);\r\n    } else {\r\n      const url = `http://localhost:3000/orderBasket/wishList/users/${user.id}`;\r\n\r\n      const requestMyWishList = {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      console.log(\"Fetching myWishList from server...\");\r\n      fetch(url, requestMyWishList)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          //const sortedWishList = [...data].sort((a, b) => a.id - b.id);\r\n          console.log(\"this is my wish list\")\r\n          console.log(data)\r\n          setMyWishList(data);\r\n          if(data.length>0)\r\n           setFindMyWishList(true);\r\n          localStorage.setItem('myWishList', JSON.stringify(data));\r\n        })\r\n        .catch(() => setFindMyWishList(false));\r\n    }\r\n   //ספרים שאני כרגע קורא \r\n   console.log(\"Fetching myReadingList...\");\r\n    const myReadingListFromLocal = JSON.parse(localStorage.getItem('myReadingList'));\r\n    if (Array.isArray(myReadingListFromLocal)&& myReadingListFromLocal.length>0) {\r\n        setMyReadingList(myReadingListFromLocal);\r\n        setFindMyReadingList(true);\r\n    } else {\r\n      const url = `http://localhost:3000/orderBasket/myReadingList/users/${user.id}`;\r\n\r\n      const requestMyReadingList = {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      console.log(\"Fetching myReadingList from server...\");\r\n      fetch(url, requestMyReadingList)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          //const sortedWishList = [...data].sort((a, b) => a.id - b.id);\r\n          console.log(data);\r\n          setMyReadingList(data);\r\n          if(data.length>0)\r\n           setFindMyReadingList(true);\r\n          localStorage.setItem('myReadingList', JSON.stringify(data));\r\n        })\r\n        .catch(() => setFindMyReadingList(false));\r\n    }\r\n    },[])\r\n    let myWhisListHtml=null;\r\n    let myReadingListHtml=null;\r\n    \r\n    if (FindMyWishList){\r\n        myWhisListHtml = myWishList.map((book)=>{\r\n            return(\r\n                <tr key={book.volume_id}>\r\n                    <td>{book.book_name}</td>\r\n                    <td>{book.author_name}</td>\r\n                    <td>{book.publication_year}</td>\r\n                    <td>{book.request_date}</td>\r\n                    <td>\r\n                    <button onClick={() => deleteBookFromMyWishList(book.request_id)}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        )\r\n    }\r\n    \r\n    if (FindMyReadingList){\r\n        myReadingListHtml = myReadingList.map((book)=>{\r\n            return(\r\n                <tr key={book.volume_id}>\r\n                    <td>{book.book_name}</td>\r\n                    <td>{book.author_name}</td>\r\n                    <td>{book.publication_year}</td>\r\n                    <td>{book.confirmation_date}</td>\r\n                    <td>\r\n                    <button onClick={() => returnBook(book.request_id,book.volume_id)}>Return book</button>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        )\r\n    }\r\n   \r\n\r\n         \r\n    \r\n    return (\r\n        <div>\r\n          {myWhisListHtml!==null ? (\r\n            <div className={styles[\"user-card\"]}>\r\n              <h1> My Wish List</h1>\r\n              <table>\r\n                <tr>\r\n                  <th>Book Name</th>\r\n                  <th>Author</th>\r\n                  <th>Publishing year</th>\r\n                  <th>Request Date</th>\r\n                </tr>\r\n                <tbody>\r\n                  {myWhisListHtml}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ):\r\n          <p>you don't have wish list</p>\r\n          }\r\n      \r\n          {myReadingListHtml!==null  ? (\r\n            <div className={styles[\"user-card\"]}>\r\n              <h1> My reading list</h1>\r\n              <table>\r\n                <tr>\r\n                  <th>Book Name</th>\r\n                  <th>Author</th>\r\n                  <th>Publishing year</th>\r\n                  <th>Since when have I had the book?</th>\r\n                </tr>\r\n                <tbody>\r\n                  {myReadingListHtml}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ):\r\n          <p>you don't have reading list </p>}\r\n        </div>\r\n      );\r\n    \r\n    \r\n      \r\n\r\n\r\n}\r\nexport default OrderBasket;","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\info.js",["106"],[],"import { useState, useEffect } from \"react\";\r\nimport styles from \"./Info.module.css\";\r\n\r\nfunction Info() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n  const [isEdit, setIsEdit] = useState(0);\r\n\r\n  const editInfo = async () => {\r\n    let fisrtName = document.getElementById(\"updatedFirstName\").value;\r\n    let lastName = document.getElementById(\"updatedLastName\").value;\r\n    let userName = document.getElementById(\"updatedUserName\").value;\r\n    let email = document.getElementById(\"updatedEmail\").value;\r\n    let phone = document.getElementById(\"updatedPhone\").value;\r\n    let address = document.getElementById(\"updatedAddress\").value;\r\n    let age = document.getElementById(\"updatedAge\").value;\r\n\r\n    if (!fisrtName || !lastName || !userName || !email || !phone || !address || !age) {\r\n      alert(\"One or more fields are missing!\");\r\n      return;\r\n    }\r\n    console.log(user.id);\r\n    const userInfo = {\r\n      id: user.id,\r\n      first_name: fisrtName,\r\n      last_name: lastName,\r\n      username: userName,\r\n      phone: phone,\r\n      address: address,\r\n      email: email,\r\n      age: age\r\n    };\r\n\r\n    console.log(userInfo);\r\n    const url = `http://localhost:3000/Info/${user.id}`;\r\n    const requestUpdateUserInfo = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userInfo),\r\n    };\r\n\r\n    await fetch(url, requestUpdateUserInfo)\r\n      .then((res) => {\r\n        console.log(userInfo);\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(userInfo));\r\n        setUser(userInfo);\r\n        setIsEdit(0);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isEdit === 0 ? (\r\n        <div className={styles[\"user-card\"]}>\r\n          <h1>{user.first_name} {user.last_name}</h1>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Username</td>\r\n                <td>{user.username}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Email</td>\r\n                <td>{user.email}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Phone</td>\r\n                <td>{user.phone}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Address</td>\r\n                <td>{user.address}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Age</td>\r\n                <td>{user.age}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <button onClick={() => setIsEdit(1)}>Edit</button>\r\n        </div>\r\n      ) : (\r\n        <div className={styles[\"user-card\"]}>\r\n        <table>\r\n          <tr>\r\n          <td>Fisrt name</td>\r\n          <td><input id=\"updatedFirstName\" defaultValue={user.first_name} /></td>\r\n          </tr>\r\n          <tr>\r\n          <td>Last name</td>\r\n          <td><input id=\"updatedLastName\" defaultValue={user.last_name} /></td>\r\n          </tr>\r\n          <tr>\r\n          <td>Username</td>\r\n          <td><input id=\"updatedUserName\" defaultValue={user.username} /></td>\r\n          </tr>\r\n          <tr>\r\n          <td>Email</td>\r\n          <td><input id=\"updatedEmail\" defaultValue={user.email} /></td>\r\n          </tr>\r\n          <tr>\r\n          <td>Phone</td>\r\n          <td><input id=\"updatedPhone\" defaultValue={user.phone} /></td>\r\n          </tr>\r\n          <tr>\r\n          <td>Address</td>\r\n          <td><input id=\"updatedAddress\" defaultValue={user.address} /></td>\r\n          </tr>\r\n          <tr>\r\n          <td>Age</td>\r\n          <td><input id=\"updatedAge\" defaultValue={user.age} /></td>\r\n          </tr>\r\n        </table>\r\n        <button onClick={editInfo}>Save</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\addNewBook.js",["107","108","109","110","111","112","113","114","115","116"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n// import styles from \"../Login.module.css\";\r\nimport styles from \"../css/addNewBook.css\";\r\n\r\nimport CreateNewBook from \"./createNewBook\";\r\n\r\nfunction AddNewBook() {\r\n  const [isFieldEnabled, setIsFieldEnabled] = useState(false);\r\n  const [isBookExist, setIsExist] = useState(false);\r\n  const [bookDeatiles, setBookDeatiles] = useState(false);\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n  const [newbook, setBook] = useState({\r\n    book_id: '',\r\n    book_name: \"\",\r\n    author_name: \"\",\r\n    title: \"\",\r\n    publication_year: \"\",\r\n    owner_code: user.id,\r\n    availability: false,\r\n    borrower_username: \"\"\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"handleSubmit\");\r\n    const url = \"http://localhost:3000/book/volumes\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ book_id: newbook.book_id, owner_code: newbook.owner_code }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 202) {\r\n          console.log(response);\r\n          return response.json();\r\n        } else\r\n          // if (response.status === 409) {\r\n          throw \"Username or password already exists\";\r\n        //  }\r\n      })\r\n      .then((u) => {\r\n        console.log(u);\r\n        console.log(\"the book added\");\r\n        // localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        // navigate(`/users/${user.username}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n  //בדיקה האם הספר קיים בקשימת הספרים\r\n  const checknookexist = async () => {\r\n    console.log(\"checknookexist\");\r\n    if (newbook.book_name != \"\") {\r\n      const url = `http://localhost:3000/book/${newbook.book_name}`;\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      };\r\n\r\n      await fetch(url, requestOptions)\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            console.log(response);\r\n            return response.json();\r\n          } else\r\n            // if (response.status === 409) {\r\n            throw \"Username or password already exists\";\r\n          //  }\r\n        })\r\n        .then((u) => {\r\n          if (u[0]?.author_name) {\r\n\r\n            // setBook({...newbook,author_name:u[0].author_name})\r\n            setBook({ ...newbook, book_id: u[0].id, author_name: u[0].author_name, publication_year: u[0].publication_year })\r\n            console.log(newbook);\r\n            setBookDeatiles(true);\r\n            setIsExist(true);\r\n          }\r\n          else {\r\n            setBookDeatiles(true);\r\n            setIsExist(false);\r\n            console.log(\"not found\");\r\n            setBook({ ...newbook, book_id: \"\", author_name: \"\", publication_year: \"\" })\r\n            setIsFieldEnabled(true);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          alert(error);\r\n        });\r\n\r\n    }\r\n  }\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} >\r\n        {/* onSubmit={handleSubmit}> */}\r\n        <h5>What is the book name?</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"book_name\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"book_name\"\r\n            value={newbook.book_name}\r\n            onChange={(e) => setBook({ ...newbook, book_name: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <button type=\"button\" onClick={checknookexist}>check book</button>\r\n        {bookDeatiles ?\r\n          <div>\r\n            {isBookExist\r\n              ? <div>\r\n                <div className={styles[\"form-row\"]}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"author_name\"\r\n                    className={styles[\"form-input\"]}\r\n                    id=\"author_name\"\r\n                    value={newbook.author_name}\r\n                    onChange={(e) => setBook({ ...newbook, author_name: e.target.value })} // עדכון השדה של השם ב-user\r\n                    disabled={!isFieldEnabled}\r\n                  />\r\n                </div>\r\n                <div className={styles[\"form-row\"]}>\r\n                  <input\r\n                    type=\"year\"\r\n                    placeholder=\"publication_year\"\r\n                    className={styles[\"form-input\"]}\r\n                    id=\"publication_year\"\r\n                    value={newbook.publication_year}\r\n                    onChange={(e) => setBook({ ...newbook, publication_year: e.target.value })} // עדכון השדה של השם ב-user\r\n                    disabled={!isFieldEnabled}\r\n\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" onClick={handleSubmit} className={styles.btn}>\r\n                  ADD BOOK\r\n                </button>\r\n              </div>\r\n              :\r\n              <div>\r\n                <CreateNewBook book_name={newbook.book_name} />\r\n\r\n              </div>}\r\n          </div> : <div></div>}\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\n\r\nexport default AddNewBook;","C:\\full stack\\Fswd_7_naama_bat7\\FSWD7\\client\\src\\libraryPages\\createNewBook.js",["117","118","119","120","121","122","123","124","125"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\nimport styles from \"../Login.module.css\";\r\n// import {} '../Login.'\r\n\r\nfunction CreateNewBook({book_name}) {\r\n    console.log(book_name);\r\n    const [isFieldEnabled, setIsFieldEnabled] = useState(false);\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n    const [newbook, setBook] = useState({\r\n        book_name: book_name,\r\n        author_name: \"\",\r\n        categories: [],\r\n        publication_year: \"\",\r\n        owner_code: user.id,\r\n        availability: false,\r\n        borrower_username: \"\"\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"useeffect\");\r\n        const url = \"http://localhost:3000/category\";\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n        fetch(url, requestOptions)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Network response was not ok\");\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                // התוצאה כאן היא מערך של הקטגוריות\r\n                console.log(data);\r\n                setCategories(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching categories:\", error);\r\n                alert(\"Error fetching categories\");\r\n            });\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setBook({ ...newbook, categories: categories })\r\n        console.log(\"handleSubmit\");\r\n        console.log(newbook);\r\n        const url = \"http://localhost:3000/book/newBook\";\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({newbook,selectedCategories}),\r\n        };\r\n        console.log(requestOptions.body);\r\n        fetch(url, requestOptions)\r\n            .then((response) => {\r\n                if (response.status === 202) {\r\n                    console.log(response);\r\n                    return response.json();\r\n                } else\r\n                    // if (response.status === 409) {\r\n                    throw \"Username or password already exists\";\r\n                //  }\r\n            })\r\n            .then((u) => {\r\n                console.log(u);\r\n                console.log(\"the book added\");\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                alert(error);\r\n            });\r\n    };\r\n\r\n    const handleCategoryChange = (e) => {\r\n        const categoryName = e.target.value;\r\n        console.log(categoryName);\r\n        console.log(selectedCategories);\r\n        if (e.target.checked) {\r\n            setSelectedCategories([...selectedCategories, categoryName]);\r\n        } else {\r\n            setSelectedCategories(selectedCategories.filter((category) => category !== categoryName));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section >\r\n            {/* className={styles.section}> */}\r\n            <form >\r\n                {/* className={styles.form} > */}\r\n                {/* onSubmit={handleSubmit}> */}\r\n                <h5>the book does not exist, please add book deatiles:</h5>\r\n                <div className={styles[\"form-row\"]}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"author_name\"\r\n                        className={styles[\"form-input\"]}\r\n                        id=\"author_name\"\r\n                        value={newbook.author_name}\r\n                        onChange={(e) => setBook({ ...newbook, author_name: e.target.value })} // עדכון השדה של השם ב-user\r\n                    />\r\n                </div>\r\n                <div className={styles[\"form-row\"]}>\r\n                    <input\r\n                        type=\"year\"\r\n                        placeholder=\"publication_year\"\r\n                        className={styles[\"form-input\"]}\r\n                        id=\"publication_year\"\r\n                        value={newbook.publication_year}\r\n                        onChange={(e) => setBook({ ...newbook, publication_year: e.target.value })} // עדכון השדה של השם ב-user\r\n                    />\r\n                </div>\r\n                <div>\r\n                    {categories.map((category, index) => (\r\n                        <div key={index}>\r\n                            <label> \r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    value={category.id}\r\n                                    onChange={handleCategoryChange}\r\n                                    // checked={selectedCategories.includes(category.id)}\r\n                                />\r\n                                {category.category_name}\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button onClick={handleSubmit}>add book</button>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default CreateNewBook;",{"ruleId":"126","severity":1,"message":"127","line":37,"column":11,"nodeType":"128","messageId":"129","endLine":37,"endColumn":46},{"ruleId":"126","severity":1,"message":"127","line":34,"column":11,"nodeType":"128","messageId":"129","endLine":34,"endColumn":55},{"ruleId":"130","severity":1,"message":"131","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"135","line":2,"column":21,"nodeType":"132","messageId":"133","endLine":2,"endColumn":30},{"ruleId":"130","severity":1,"message":"136","line":2,"column":32,"nodeType":"132","messageId":"133","endLine":2,"endColumn":40},{"ruleId":"130","severity":1,"message":"137","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"138","line":3,"column":19,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":33},{"ruleId":"130","severity":1,"message":"131","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"140","line":2,"column":42,"nodeType":"132","messageId":"133","endLine":2,"endColumn":49},{"ruleId":"130","severity":1,"message":"137","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"138","line":3,"column":19,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":33},{"ruleId":"141","severity":1,"message":"142","line":43,"column":7,"nodeType":"143","endLine":43,"endColumn":9,"suggestions":"144"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"135","line":2,"column":21,"nodeType":"132","messageId":"133","endLine":2,"endColumn":30},{"ruleId":"130","severity":1,"message":"136","line":2,"column":32,"nodeType":"132","messageId":"133","endLine":2,"endColumn":40},{"ruleId":"130","severity":1,"message":"137","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"138","line":3,"column":19,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":33},{"ruleId":"130","severity":1,"message":"131","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"137","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"138","line":3,"column":19,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":33},{"ruleId":"145","severity":1,"message":"146","line":26,"column":12,"nodeType":"147","messageId":"148","endLine":26,"endColumn":41},{"ruleId":"141","severity":1,"message":"149","line":138,"column":7,"nodeType":"143","endLine":138,"endColumn":9,"suggestions":"150"},{"ruleId":"130","severity":1,"message":"135","line":1,"column":20,"nodeType":"132","messageId":"133","endLine":1,"endColumn":29},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"135","line":2,"column":21,"nodeType":"132","messageId":"133","endLine":2,"endColumn":30},{"ruleId":"130","severity":1,"message":"137","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"138","line":3,"column":19,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":33},{"ruleId":"130","severity":1,"message":"151","line":13,"column":16,"nodeType":"132","messageId":"133","endLine":13,"endColumn":23},{"ruleId":"130","severity":1,"message":"152","line":24,"column":9,"nodeType":"132","messageId":"133","endLine":24,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":45,"column":11,"nodeType":"128","messageId":"129","endLine":45,"endColumn":55},{"ruleId":"153","severity":1,"message":"154","line":62,"column":27,"nodeType":"155","messageId":"156","endLine":62,"endColumn":29},{"ruleId":"126","severity":1,"message":"127","line":78,"column":13,"nodeType":"128","messageId":"129","endLine":78,"endColumn":57},{"ruleId":"130","severity":1,"message":"131","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"137","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":17},{"ruleId":"130","severity":1,"message":"138","line":3,"column":19,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":33},{"ruleId":"130","severity":1,"message":"157","line":9,"column":12,"nodeType":"132","messageId":"133","endLine":9,"endColumn":26},{"ruleId":"130","severity":1,"message":"158","line":9,"column":28,"nodeType":"132","messageId":"133","endLine":9,"endColumn":45},{"ruleId":"130","severity":1,"message":"151","line":10,"column":18,"nodeType":"132","messageId":"133","endLine":10,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":71,"column":21,"nodeType":"128","messageId":"129","endLine":71,"endColumn":65},"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FaTrash' is defined but never used.","'FaEdit' is defined but never used.","'FaSave' is defined but never used.","'version' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'findMyBooks' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["159"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["160"],"'setUser' is assigned a value but never used.","'navigate' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isFieldEnabled' is assigned a value but never used.","'setIsFieldEnabled' is assigned a value but never used.",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [findMyBooks, user.id]",{"range":"165","text":"166"},"Update the dependencies array to be: [user.id]",{"range":"167","text":"168"},[1511,1513],"[findMyBooks, user.id]",[4970,4972],"[user.id]"]