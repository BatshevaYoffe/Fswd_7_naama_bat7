[{"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\index.js":"1","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\App.js":"2","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Login.js":"3","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Navbar.js":"4","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\ProtectedRoute.js":"5","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Register.js":"6","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Info.js":"7","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Todos.js":"8","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Posts.js":"9","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Error.js":"10","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Comments.js":"11","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\index.js":"12","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\App.js":"13","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Login.js":"14","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\ProtectedRoute.js":"15","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Navbar.js":"16","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Register.js":"17","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Todos.js":"18","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Posts.js":"19","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Info.js":"20","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Error.js":"21","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Comments.js":"22","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\findBook.js":"23","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\contactTheManager.js":"24","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\orderBasket.js":"25","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\myBooks.js":"26","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\info.js":"27","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\addNewBook.js":"28","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\createNewBook.js":"29"},{"size":212,"mtime":1686066387160,"results":"30","hashOfConfig":"31"},{"size":2026,"mtime":1687275661228,"results":"32","hashOfConfig":"31"},{"size":2309,"mtime":1687275661229,"results":"33","hashOfConfig":"31"},{"size":821,"mtime":1687256971427,"results":"34","hashOfConfig":"31"},{"size":234,"mtime":1687256971428,"results":"35","hashOfConfig":"31"},{"size":2247,"mtime":1687275548306,"results":"36","hashOfConfig":"31"},{"size":909,"mtime":1687256971431,"results":"37","hashOfConfig":"31"},{"size":7907,"mtime":1687291195776,"results":"38","hashOfConfig":"31"},{"size":7420,"mtime":1687293408739,"results":"39","hashOfConfig":"31"},{"size":491,"mtime":1686066387162,"results":"40","hashOfConfig":"31"},{"size":3255,"mtime":1687275357179,"results":"41","hashOfConfig":"31"},{"size":212,"mtime":1686066387160,"results":"42","hashOfConfig":"43"},{"size":2972,"mtime":1690465550347,"results":"44","hashOfConfig":"43"},{"size":2351,"mtime":1690190097157,"results":"45","hashOfConfig":"43"},{"size":234,"mtime":1687256971428,"results":"46","hashOfConfig":"43"},{"size":1643,"mtime":1690464088087,"results":"47","hashOfConfig":"43"},{"size":4821,"mtime":1690310085867,"results":"48","hashOfConfig":"43"},{"size":7907,"mtime":1687291195776,"results":"49","hashOfConfig":"43"},{"size":7420,"mtime":1687293408739,"results":"50","hashOfConfig":"43"},{"size":909,"mtime":1687256971431,"results":"51","hashOfConfig":"43"},{"size":491,"mtime":1686066387162,"results":"52","hashOfConfig":"43"},{"size":3255,"mtime":1687275357179,"results":"53","hashOfConfig":"43"},{"size":218,"mtime":1690193982579,"results":"54","hashOfConfig":"43"},{"size":234,"mtime":1690193982579,"results":"55","hashOfConfig":"43"},{"size":4888,"mtime":1690464088093,"results":"56","hashOfConfig":"43"},{"size":6000,"mtime":1690464088091,"results":"57","hashOfConfig":"43"},{"size":3705,"mtime":1690464088089,"results":"58","hashOfConfig":"43"},{"size":5610,"mtime":1690746555320,"results":"59","hashOfConfig":"43"},{"size":5517,"mtime":1690745553314,"results":"60","hashOfConfig":"43"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cj2yrx",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"8m0cfa",{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\index.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\App.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Login.js",["157"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ setUsername }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  if (localStorage.getItem(\"currentUser\")) {\r\n    localStorage.clear();\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !password) {\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/login\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          throw \"Wrong username or password\";\r\n        }\r\n      })\r\n      .then((user) => {\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        setUsername(name);\r\n        navigate(`/users/${name}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>LOGIN</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          LOGIN\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/register\">\r\n          REGISTER\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Navbar.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\ProtectedRoute.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Register.js",["158"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\n\r\nfunction Register({ setUsername }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !password) {\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/register\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 409) {\r\n          throw \"Username or password already exists\";\r\n        }\r\n      })\r\n      .then((user) => {\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        setUsername(name);\r\n        navigate(`/users/${name}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>REGISTER</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          REGISTER\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/login\">\r\n          LOGIN\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Register;","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Info.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Todos.js",["159","160"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nimport styles from \"./Todos.module.css\";\r\n\r\nfunction Todos() {\r\n  const [Todos, setTodos] = useState([]);//רשימה של כל הטודוס\r\n  const [editingTodoId, setEditingTodoId] = useState(null);//שומר את מספר הכותרת שעושים עליה שינוי\r\n  const [editTitle, setEditTitle] = useState(null);//השינוי שעושים לכותרת\r\n  const [newTodo, setnewTodo] = useState([]);//תוכן של טודו חדש\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\r\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));//כל הרשימה המעודכנת עד עכשיו\r\n  const todosComp = JSON.parse(localStorage.getItem(\"compTodos\"));//במידה והוסיפו גם את המשימות שבוצעו כדי לגעת שבוצעו\r\n\r\n  useEffect(() => {\r\n    if (!todos) {\r\n      const temp = getComp(0);\r\n      temp.then(data => setTodos(data));\r\n    }\r\n    else {\r\n      setTodos(todos)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n  }, [Todos]);\r\n\r\n  //פונקציה ששולפת את כל המשימות שהמצב שלהן COMP \r\n  const getComp = async (comp) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}/${comp}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const newData = await response.json();\r\n        return newData;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch todos:', error.message);\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        await setTodos((prevTodos) => {\r\n          return prevTodos.filter(todo => todo.id !== id);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async (id, title, c) => {\r\n    if (editingTodoId != null) {\r\n      try {\r\n        const todo = {\r\n          userId: usern.id,\r\n          id: editingTodoId,\r\n          title: editTitle,\r\n          completed: c ? 1 : 0\r\n        };\r\n        console.log(todo);\r\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(todo)\r\n        });\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          await setTodos(prevTodos => {\r\n            return prevTodos.map(todo => {\r\n              if (todo.id === updatedTodo.id) {\r\n                return updatedTodo;\r\n              }\r\n              return todo;\r\n            });\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating data:\", error);\r\n        navigate(\"/error\");\r\n      } finally {\r\n        setEditingTodoId(null);\r\n        setEditTitle(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckChange = async (id, title, completed) => {\r\n    if (!todosComp) {//במצב בו עוד לא מוצגות המשימות שבוצעו\r\n      await setTodos((prevTodos) => {\r\n        return prevTodos.filter(todo => todo.id !== id);\r\n      });\r\n    }\r\n    try {\r\n      const todo = {\r\n        userId: usern.id,\r\n        id: id,\r\n        title: title,\r\n        completed: completed\r\n      };\r\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(todo)\r\n      });\r\n      if (response.ok) {\r\n        const updatedTodo = await response.json();\r\n        await setTodos(prevTodos => {\r\n          return prevTodos.map(todo => {\r\n            if (todo.id === updatedTodo.id) {\r\n              return updatedTodo;\r\n            }\r\n            return todo;\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  }\r\n\r\n  const handleEdit = async (id, title) => {\r\n    setEditingTodoId(id);\r\n    setEditTitle(title);\r\n  };\r\n\r\n  const addTodo = async () => {\r\n    if (newTodo.trim() !== '') {\r\n      try {\r\n        const todo = {\r\n          userId: usern.id,\r\n          id: 0,\r\n          title: newTodo,\r\n          completed: 0\r\n        };\r\n        const response = await fetch(`http://localhost:3000/todos`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(todo)\r\n        });\r\n        console.log(response);\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          await setTodos(prevTodos => [...prevTodos, updatedTodo]);\r\n          setnewTodo('');\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating data:\", error);\r\n        navigate(\"/error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //מוסיף את המשימות שבוצעו\r\n  const showCompleted = async () => {\r\n    if (!todosComp) {\r\n      const temp = getComp(1);\r\n      temp.then(data => {\r\n        const mergedTodos = Todos.concat(data);\r\n        mergedTodos.sort((a, b) => a.id - b.id);\r\n        localStorage.setItem(\"compTodos\", JSON.stringify(mergedTodos));\r\n        setTodos(mergedTodos)\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={styles[\"todos-select\"]}>\r\n      <div className={styles[\"lists\"]}>\r\n        <div className={styles[\"todos-list\"]}>\r\n          <input\r\n            type=\"text\"\r\n            value={newTodo}\r\n            onChange={e => setnewTodo(e.target.value)}\r\n          />\r\n          <button onClick={addTodo}>Add Todo</button>\r\n          {Todos.map(todo => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleCheckChange(todo.id, todo.title, !todo.completed)}\r\n                />\r\n                <span className={todo.completed ? '' : 'completed'}>\r\n                  {editingTodoId === todo.id ? (\r\n                    <input\r\n                      className={styles[\"todos-input\"]}\r\n                      type=\"text\"\r\n                      value={editTitle}\r\n                      onChange={(e) => setEditTitle(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    todo.title\r\n                  )}\r\n                </span>\r\n                <div className=\"buttons\">\r\n                  <button onClick={() => handleDelete(todo.id)}>\r\n                    <FaTrash />\r\n                  </button>\r\n                  <button onClick={() => handleEdit(todo.id, todo.title)}>\r\n                    <FaEdit />\r\n                  </button>\r\n                  <button onClick={() => handleSave(todo.id, todo.title, todo.completed)}>\r\n                    <FaSave />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {!todosComp ? (\r\n            <button onClick={() => showCompleted()}>\r\n              SHOW COMPLETED\r\n            </button>\r\n          ) : (\r\n            <h2>this is all users todo</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Posts.js",["161","162","163"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nimport styles from \"./Posts.module.css\";\r\nimport Comments from \"./Comments\";\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [commentsPost, setCommentsPost] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(-1);\r\n\r\n  const navigate = useNavigate();\r\n  const scrollRef = useRef(null);\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  useEffect(() => {\r\n    let savedPosts = localStorage.getItem(\"posts\");\r\n    if (!savedPosts) {\r\n      const url = `http://localhost:3000/posts?userId=${user.id}&_sort=id`;\r\n      getData(url, setPosts);\r\n      localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n    } else {\r\n      setPosts(JSON.parse(savedPosts));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    if (commentsPost) {\r\n      localStorage.setItem(`comments${commentsPost}`, JSON.stringify(comments));\r\n    }\r\n  }, [comments]);\r\n\r\n  useEffect(() => {\r\n    let savedComments = localStorage.getItem(`comments${commentsPost}`);\r\n    if (!savedComments) {\r\n      const url = `http://localhost:3000/comments?postId=${commentsPost}&_sort=id`;\r\n      getData(url, setComments);\r\n      if (commentsPost) {\r\n        localStorage.setItem(\r\n          `comments${commentsPost}`,\r\n          JSON.stringify(comments)\r\n        );\r\n      }\r\n    } else {\r\n      setComments(JSON.parse(savedComments));\r\n    }\r\n  }, [commentsPost]);\r\n\r\n  const getData = async (url, setData) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data))\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        navigate(\"/error\");\r\n      });\r\n  };\r\n\r\n  const addData = async (url, data, setData) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.status === 200) {\r\n        const newData = await response.json();\r\n        setData((prevData) => [...prevData, newData]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding new data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const editData = async (url, data, setData) => {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.status === 200) {\r\n        const updatedRecord = await response.json();\r\n        setData((prevData) => {\r\n          return prevData.map((record) => {\r\n            if (record.id === updatedRecord.id) {\r\n              return updatedRecord;\r\n            }\r\n            return record;\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const deleteData = async (url, recordId, setData) => {\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.ok) {\r\n        setData((prevData) => {\r\n          return prevData.filter((record) => record.id !== recordId);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const handleComments = async (postId) => {\r\n    if (commentsPost === postId) {\r\n      setCommentsPost(null);\r\n      setComments([]);\r\n    } else {\r\n      setCommentsPost(postId);\r\n    }\r\n\r\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n\r\n  const addPost = async () => {\r\n    let title = document.getElementById(\"title\").value;\r\n    let body = document.getElementById(\"body\").value;\r\n    if (!title || !body) {\r\n      alert(\"Title or body are empty\");\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/posts\";\r\n    const post = {\r\n      userId: user.id,\r\n      title: title,\r\n      body: body,\r\n    };\r\n    await addData(url, post, setPosts);\r\n    alert(\"Added successfully!\");\r\n  };\r\n\r\n  const editPost = async (postId) => {\r\n    let title = document.getElementById(\"updatedTitle\").value;\r\n    let body = document.getElementById(\"updatedBody\").value;\r\n    if (!title || !body) {\r\n      alert(\"Title or body are empty\");\r\n      return;\r\n    }\r\n\r\n    const url = `http://localhost:3000/posts/${postId}`;\r\n    const post = {\r\n      id: postId,\r\n      userId: user.id,\r\n      title: title,\r\n      body: body,\r\n    };\r\n    editData(url, post, setPosts);\r\n    setIsEdit(-1);\r\n  };\r\n\r\n  const deletePost = async (postId) => {\r\n    const url = `http://localhost:3000/posts/${postId}`;\r\n    deleteData(url, postId, setPosts);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.posts} ref={scrollRef}>\r\n      <div className={styles[\"new-post\"]}>\r\n        <textarea id=\"title\" placeholder=\"Title\"></textarea>\r\n        <textarea id=\"body\" placeholder=\"Body\"></textarea>\r\n        <button onClick={addPost}>Add Post</button>\r\n      </div>\r\n      <div className={styles[\"grid-container\"]}>\r\n        {posts.map((post) => (\r\n          <div\r\n            className={`${styles[\"post-card\"]} ${\r\n              commentsPost === post.id ? styles.singleColumn : \"\"\r\n            }`}\r\n            key={post.id}\r\n          >\r\n            <div>\r\n              {isEdit === post.id ? (\r\n                <div className={styles[\"edit-post\"]}>\r\n                  <section className={styles[\"edit-input\"]}>\r\n                    <input id=\"updatedTitle\" defaultValue={post.title} />\r\n                    <textarea id=\"updatedBody\" defaultValue={post.body} />\r\n                  </section>\r\n                  <button onClick={() => editPost(post.id)}>Save</button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <h5>{`${post.id}. ${post.title}`}</h5>\r\n                  <p>{post.body}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className={styles[\"post-btns\"]}>\r\n              <button onClick={() => setIsEdit(post.id)}>Edit</button>\r\n              <button onClick={() => deletePost(post.id)}>Delete</button>\r\n              <button\r\n                className={styles[\"comments-btn\"]}\r\n                onClick={() => handleComments(post.id)}\r\n              >\r\n                {commentsPost === post.id\r\n                  ? \"Hide Comments\"\r\n                  : \"Display Comments\"}\r\n              </button>\r\n            </div>\r\n            {commentsPost === post.id && (\r\n              <Comments\r\n                comments={comments}\r\n                postId={post.id}\r\n                setComments={setComments}\r\n                dataHandlers={{ addData, editData, deleteData }}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Error.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Comments.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\index.js",[],[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\App.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Login.js",["164"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ setUsername }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  if (localStorage.getItem(\"currentUser\")) {\r\n    localStorage.clear();\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !password) {\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/login\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else \r\n        //if (response.status === 401) {\r\n          throw \"Wrong username or password\";\r\n       // }\r\n      })\r\n      .then((user) => {\r\n        console.log(user);\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        setUsername(name);\r\n        navigate(`/users/${name}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>LOGIN</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          LOGIN\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/register\">\r\n          REGISTER\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\ProtectedRoute.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Navbar.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Register.js",["165"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\n\r\nfunction Register() {\r\n\r\n  const [user, setUser] = useState({ username: \"\", password: \"\", first_name: \"\", last_name: \"\", email: \"\", phone: '', address: '', age: \"\" }); // מערך שמכיל את המשתנים של השם והסיסמה\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const url = \"http://localhost:3000/register\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        console.log('n');\r\n        if (response.status === 200) {\r\n          console.log(response);\r\n          return response.json();\r\n        } else\r\n          // if (response.status === 409) {\r\n          console.log(response);\r\n          throw \"Username or password already exists\";\r\n        //  }\r\n      })\r\n      .then((u) => {\r\n        console.log(u);\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        navigate(`/users/${user.username}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>REGISTER</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={user.username}\r\n            onChange={(e) => setUser({ ...user, username: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={user.password}\r\n            onChange={(e) => setUser({ ...user, password: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"first_name\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"first_name\"\r\n            value={user.first_name}\r\n            onChange={(e) => setUser({ ...user, first_name: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"last_name\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"last_name\"\r\n            value={user.last_name}\r\n            onChange={(e) => setUser({ ...user, last_name: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"email\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"email\"\r\n            value={user.email}\r\n            onChange={(e) => setUser({ ...user, email: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"phone\"\r\n            placeholder=\"phone\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"phone\"\r\n            value={user.phone}\r\n            onChange={(e) => setUser({ ...user, phone: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"address\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"address\"\r\n            value={user.address}\r\n            onChange={(e) => setUser({ ...user, address: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"age\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"age\"\r\n            value={user.age}\r\n            onChange={(e) => setUser({ ...user, age: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          REGISTER\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/login\">\r\n          LOGIN\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Register;","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Todos.js",["166","167"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Posts.js",["168","169","170"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Info.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Error.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Comments.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\findBook.js",["171","172","173","174","175","176","177"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nfunction findBook(){\r\n\r\n}\r\nexport default findBook;","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\contactTheManager.js",["178","179","180","181","182","183","184"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\nfunction contactTheManager(){\r\n\r\n}\r\nexport default contactTheManager;","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\orderBasket.js",["185","186","187","188","189","190"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\myBooks.js",["191","192","193","194","195","196","197"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\info.js",["198"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\addNewBook.js",["199","200","201","202","203","204","205","206","207","208"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\createNewBook.js",["209","210","211","212","213","214","215","216","217"],[],{"ruleId":"218","severity":1,"message":"219","line":36,"column":11,"nodeType":"220","messageId":"221","endLine":36,"endColumn":46},{"ruleId":"218","severity":1,"message":"219","line":32,"column":11,"nodeType":"220","messageId":"221","endLine":32,"endColumn":55},{"ruleId":"222","severity":1,"message":"223","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":27,"column":6,"nodeType":"228","endLine":27,"endColumn":8,"suggestions":"229"},{"ruleId":"226","severity":1,"message":"230","line":27,"column":6,"nodeType":"228","endLine":27,"endColumn":8,"suggestions":"231"},{"ruleId":"226","severity":1,"message":"232","line":37,"column":6,"nodeType":"228","endLine":37,"endColumn":16,"suggestions":"233"},{"ruleId":"226","severity":1,"message":"234","line":53,"column":6,"nodeType":"228","endLine":53,"endColumn":20,"suggestions":"235"},{"ruleId":"218","severity":1,"message":"219","line":37,"column":11,"nodeType":"220","messageId":"221","endLine":37,"endColumn":46},{"ruleId":"218","severity":1,"message":"219","line":33,"column":11,"nodeType":"220","messageId":"221","endLine":33,"endColumn":55},{"ruleId":"222","severity":1,"message":"223","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":27,"column":6,"nodeType":"228","endLine":27,"endColumn":8,"suggestions":"236"},{"ruleId":"226","severity":1,"message":"230","line":27,"column":6,"nodeType":"228","endLine":27,"endColumn":8,"suggestions":"237"},{"ruleId":"226","severity":1,"message":"232","line":37,"column":6,"nodeType":"228","endLine":37,"endColumn":16,"suggestions":"238"},{"ruleId":"226","severity":1,"message":"234","line":53,"column":6,"nodeType":"228","endLine":53,"endColumn":20,"suggestions":"239"},{"ruleId":"222","severity":1,"message":"240","line":1,"column":10,"nodeType":"224","messageId":"225","endLine":1,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":19},{"ruleId":"222","severity":1,"message":"241","line":2,"column":21,"nodeType":"224","messageId":"225","endLine":2,"endColumn":30},{"ruleId":"222","severity":1,"message":"242","line":2,"column":32,"nodeType":"224","messageId":"225","endLine":2,"endColumn":40},{"ruleId":"222","severity":1,"message":"243","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":17},{"ruleId":"222","severity":1,"message":"244","line":3,"column":19,"nodeType":"224","messageId":"225","endLine":3,"endColumn":25},{"ruleId":"222","severity":1,"message":"245","line":3,"column":27,"nodeType":"224","messageId":"225","endLine":3,"endColumn":33},{"ruleId":"222","severity":1,"message":"240","line":1,"column":10,"nodeType":"224","messageId":"225","endLine":1,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":19},{"ruleId":"222","severity":1,"message":"241","line":2,"column":21,"nodeType":"224","messageId":"225","endLine":2,"endColumn":30},{"ruleId":"222","severity":1,"message":"242","line":2,"column":32,"nodeType":"224","messageId":"225","endLine":2,"endColumn":40},{"ruleId":"222","severity":1,"message":"243","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":17},{"ruleId":"222","severity":1,"message":"244","line":3,"column":19,"nodeType":"224","messageId":"225","endLine":3,"endColumn":25},{"ruleId":"222","severity":1,"message":"245","line":3,"column":27,"nodeType":"224","messageId":"225","endLine":3,"endColumn":33},{"ruleId":"222","severity":1,"message":"240","line":1,"column":10,"nodeType":"224","messageId":"225","endLine":1,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":19},{"ruleId":"222","severity":1,"message":"243","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":17},{"ruleId":"222","severity":1,"message":"244","line":3,"column":19,"nodeType":"224","messageId":"225","endLine":3,"endColumn":25},{"ruleId":"222","severity":1,"message":"245","line":3,"column":27,"nodeType":"224","messageId":"225","endLine":3,"endColumn":33},{"ruleId":"226","severity":1,"message":"246","line":70,"column":7,"nodeType":"228","endLine":70,"endColumn":9,"suggestions":"247"},{"ruleId":"222","severity":1,"message":"240","line":1,"column":10,"nodeType":"224","messageId":"225","endLine":1,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":19},{"ruleId":"222","severity":1,"message":"248","line":2,"column":42,"nodeType":"224","messageId":"225","endLine":2,"endColumn":49},{"ruleId":"222","severity":1,"message":"243","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":17},{"ruleId":"222","severity":1,"message":"244","line":3,"column":19,"nodeType":"224","messageId":"225","endLine":3,"endColumn":25},{"ruleId":"222","severity":1,"message":"245","line":3,"column":27,"nodeType":"224","messageId":"225","endLine":3,"endColumn":33},{"ruleId":"226","severity":1,"message":"246","line":40,"column":7,"nodeType":"228","endLine":40,"endColumn":9,"suggestions":"249"},{"ruleId":"222","severity":1,"message":"241","line":1,"column":20,"nodeType":"224","messageId":"225","endLine":1,"endColumn":29},{"ruleId":"222","severity":1,"message":"223","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":19},{"ruleId":"222","severity":1,"message":"241","line":2,"column":21,"nodeType":"224","messageId":"225","endLine":2,"endColumn":30},{"ruleId":"222","severity":1,"message":"243","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":17},{"ruleId":"222","severity":1,"message":"244","line":3,"column":19,"nodeType":"224","messageId":"225","endLine":3,"endColumn":25},{"ruleId":"222","severity":1,"message":"245","line":3,"column":27,"nodeType":"224","messageId":"225","endLine":3,"endColumn":33},{"ruleId":"222","severity":1,"message":"250","line":14,"column":16,"nodeType":"224","messageId":"225","endLine":14,"endColumn":23},{"ruleId":"222","severity":1,"message":"251","line":25,"column":9,"nodeType":"224","messageId":"225","endLine":25,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":46,"column":11,"nodeType":"220","messageId":"221","endLine":46,"endColumn":55},{"ruleId":"252","severity":1,"message":"253","line":63,"column":27,"nodeType":"254","messageId":"255","endLine":63,"endColumn":29},{"ruleId":"218","severity":1,"message":"219","line":79,"column":13,"nodeType":"220","messageId":"221","endLine":79,"endColumn":57},{"ruleId":"222","severity":1,"message":"240","line":1,"column":10,"nodeType":"224","messageId":"225","endLine":1,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":19},{"ruleId":"222","severity":1,"message":"243","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":17},{"ruleId":"222","severity":1,"message":"244","line":3,"column":19,"nodeType":"224","messageId":"225","endLine":3,"endColumn":25},{"ruleId":"222","severity":1,"message":"245","line":3,"column":27,"nodeType":"224","messageId":"225","endLine":3,"endColumn":33},{"ruleId":"222","severity":1,"message":"256","line":9,"column":12,"nodeType":"224","messageId":"225","endLine":9,"endColumn":26},{"ruleId":"222","severity":1,"message":"257","line":9,"column":28,"nodeType":"224","messageId":"225","endLine":9,"endColumn":45},{"ruleId":"222","severity":1,"message":"250","line":10,"column":18,"nodeType":"224","messageId":"225","endLine":10,"endColumn":25},{"ruleId":"218","severity":1,"message":"219","line":71,"column":21,"nodeType":"220","messageId":"221","endLine":71,"endColumn":65},"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getComp' and 'todos'. Either include them or remove the dependency array.","ArrayExpression",["258"],"React Hook useEffect has missing dependencies: 'getData', 'posts', and 'user.id'. Either include them or remove the dependency array.",["259"],"React Hook useEffect has a missing dependency: 'commentsPost'. Either include it or remove the dependency array.",["260"],"React Hook useEffect has missing dependencies: 'comments' and 'getData'. Either include them or remove the dependency array.",["261"],["262"],["263"],["264"],["265"],"'useNavigate' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FaTrash' is defined but never used.","'FaEdit' is defined but never used.","'FaSave' is defined but never used.","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["266"],"'version' is defined but never used.",["267"],"'setUser' is assigned a value but never used.","'navigate' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isFieldEnabled' is assigned a value but never used.","'setIsFieldEnabled' is assigned a value but never used.",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"268","fix":"276"},{"desc":"270","fix":"277"},{"desc":"272","fix":"278"},{"desc":"274","fix":"279"},{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},"Update the dependencies array to be: [getComp, todos]",{"range":"283","text":"284"},"Update the dependencies array to be: [getData, posts, user.id]",{"range":"285","text":"286"},"Update the dependencies array to be: [comments, commentsPost]",{"range":"287","text":"288"},"Update the dependencies array to be: [comments, commentsPost, getData]",{"range":"289","text":"290"},{"range":"291","text":"284"},{"range":"292","text":"286"},{"range":"293","text":"288"},{"range":"294","text":"290"},"Update the dependencies array to be: [user.id]",{"range":"295","text":"296"},{"range":"297","text":"296"},[1025,1027],"[getComp, todos]",[899,901],"[getData, posts, user.id]",[1145,1155],"[comments, commentsPost]",[1628,1642],"[comments, commentsPost, getData]",[1025,1027],[899,901],[1145,1155],[1628,1642],[2467,2469],"[user.id]",[1381,1383]]