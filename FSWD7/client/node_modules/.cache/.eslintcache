[{"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\index.js":"1","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\App.js":"2","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Login.js":"3","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Navbar.js":"4","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\ProtectedRoute.js":"5","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Register.js":"6","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Info.js":"7","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Todos.js":"8","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Posts.js":"9","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Error.js":"10","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Comments.js":"11","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\index.js":"12","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\App.js":"13","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Login.js":"14","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\ProtectedRoute.js":"15","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Navbar.js":"16","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Register.js":"17","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Todos.js":"18","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Posts.js":"19","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Info.js":"20","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Error.js":"21","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Comments.js":"22","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\findBook.js":"23","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\contactTheManager.js":"24","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\orderBasket.js":"25","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\myBooks.js":"26","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\info.js":"27"},{"size":212,"mtime":1686066387160,"results":"28","hashOfConfig":"29"},{"size":2026,"mtime":1687275661228,"results":"30","hashOfConfig":"29"},{"size":2309,"mtime":1687275661229,"results":"31","hashOfConfig":"29"},{"size":821,"mtime":1687256971427,"results":"32","hashOfConfig":"29"},{"size":234,"mtime":1687256971428,"results":"33","hashOfConfig":"29"},{"size":2247,"mtime":1687275548306,"results":"34","hashOfConfig":"29"},{"size":909,"mtime":1687256971431,"results":"35","hashOfConfig":"29"},{"size":7907,"mtime":1687291195776,"results":"36","hashOfConfig":"29"},{"size":7420,"mtime":1687293408739,"results":"37","hashOfConfig":"29"},{"size":491,"mtime":1686066387162,"results":"38","hashOfConfig":"29"},{"size":3255,"mtime":1687275357179,"results":"39","hashOfConfig":"29"},{"size":212,"mtime":1686066387160,"results":"40","hashOfConfig":"41"},{"size":2919,"mtime":1690289291589,"results":"42","hashOfConfig":"41"},{"size":2351,"mtime":1690190097157,"results":"43","hashOfConfig":"41"},{"size":234,"mtime":1687256971428,"results":"44","hashOfConfig":"41"},{"size":1264,"mtime":1690193982574,"results":"45","hashOfConfig":"41"},{"size":4787,"mtime":1690276639688,"results":"46","hashOfConfig":"41"},{"size":7907,"mtime":1687291195776,"results":"47","hashOfConfig":"41"},{"size":7420,"mtime":1687293408739,"results":"48","hashOfConfig":"41"},{"size":909,"mtime":1687256971431,"results":"49","hashOfConfig":"41"},{"size":491,"mtime":1686066387162,"results":"50","hashOfConfig":"41"},{"size":3255,"mtime":1687275357179,"results":"51","hashOfConfig":"41"},{"size":218,"mtime":1690193982579,"results":"52","hashOfConfig":"41"},{"size":234,"mtime":1690193982579,"results":"53","hashOfConfig":"41"},{"size":222,"mtime":1690193982582,"results":"54","hashOfConfig":"41"},{"size":1222,"mtime":1690281366202,"results":"55","hashOfConfig":"41"},{"size":3310,"mtime":1690276451738,"results":"56","hashOfConfig":"41"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cj2yrx",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"8m0cfa",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"97"},"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\index.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\App.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Login.js",["149"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ setUsername }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  if (localStorage.getItem(\"currentUser\")) {\r\n    localStorage.clear();\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !password) {\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/login\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          throw \"Wrong username or password\";\r\n        }\r\n      })\r\n      .then((user) => {\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        setUsername(name);\r\n        navigate(`/users/${name}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>LOGIN</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          LOGIN\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/register\">\r\n          REGISTER\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Navbar.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\ProtectedRoute.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\Register.js",["150"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\n\r\nfunction Register({ setUsername }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !password) {\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/register\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else if (response.status === 409) {\r\n          throw \"Username or password already exists\";\r\n        }\r\n      })\r\n      .then((user) => {\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        setUsername(name);\r\n        navigate(`/users/${name}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>REGISTER</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          REGISTER\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/login\">\r\n          LOGIN\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Register;","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Info.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Todos.js",["151","152"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nimport styles from \"./Todos.module.css\";\r\n\r\nfunction Todos() {\r\n  const [Todos, setTodos] = useState([]);//רשימה של כל הטודוס\r\n  const [editingTodoId, setEditingTodoId] = useState(null);//שומר את מספר הכותרת שעושים עליה שינוי\r\n  const [editTitle, setEditTitle] = useState(null);//השינוי שעושים לכותרת\r\n  const [newTodo, setnewTodo] = useState([]);//תוכן של טודו חדש\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\r\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));//כל הרשימה המעודכנת עד עכשיו\r\n  const todosComp = JSON.parse(localStorage.getItem(\"compTodos\"));//במידה והוסיפו גם את המשימות שבוצעו כדי לגעת שבוצעו\r\n\r\n  useEffect(() => {\r\n    if (!todos) {\r\n      const temp = getComp(0);\r\n      temp.then(data => setTodos(data));\r\n    }\r\n    else {\r\n      setTodos(todos)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n  }, [Todos]);\r\n\r\n  //פונקציה ששולפת את כל המשימות שהמצב שלהן COMP \r\n  const getComp = async (comp) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}/${comp}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const newData = await response.json();\r\n        return newData;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch todos:', error.message);\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        await setTodos((prevTodos) => {\r\n          return prevTodos.filter(todo => todo.id !== id);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async (id, title, c) => {\r\n    if (editingTodoId != null) {\r\n      try {\r\n        const todo = {\r\n          userId: usern.id,\r\n          id: editingTodoId,\r\n          title: editTitle,\r\n          completed: c ? 1 : 0\r\n        };\r\n        console.log(todo);\r\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(todo)\r\n        });\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          await setTodos(prevTodos => {\r\n            return prevTodos.map(todo => {\r\n              if (todo.id === updatedTodo.id) {\r\n                return updatedTodo;\r\n              }\r\n              return todo;\r\n            });\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating data:\", error);\r\n        navigate(\"/error\");\r\n      } finally {\r\n        setEditingTodoId(null);\r\n        setEditTitle(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckChange = async (id, title, completed) => {\r\n    if (!todosComp) {//במצב בו עוד לא מוצגות המשימות שבוצעו\r\n      await setTodos((prevTodos) => {\r\n        return prevTodos.filter(todo => todo.id !== id);\r\n      });\r\n    }\r\n    try {\r\n      const todo = {\r\n        userId: usern.id,\r\n        id: id,\r\n        title: title,\r\n        completed: completed\r\n      };\r\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(todo)\r\n      });\r\n      if (response.ok) {\r\n        const updatedTodo = await response.json();\r\n        await setTodos(prevTodos => {\r\n          return prevTodos.map(todo => {\r\n            if (todo.id === updatedTodo.id) {\r\n              return updatedTodo;\r\n            }\r\n            return todo;\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  }\r\n\r\n  const handleEdit = async (id, title) => {\r\n    setEditingTodoId(id);\r\n    setEditTitle(title);\r\n  };\r\n\r\n  const addTodo = async () => {\r\n    if (newTodo.trim() !== '') {\r\n      try {\r\n        const todo = {\r\n          userId: usern.id,\r\n          id: 0,\r\n          title: newTodo,\r\n          completed: 0\r\n        };\r\n        const response = await fetch(`http://localhost:3000/todos`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(todo)\r\n        });\r\n        console.log(response);\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          await setTodos(prevTodos => [...prevTodos, updatedTodo]);\r\n          setnewTodo('');\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating data:\", error);\r\n        navigate(\"/error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //מוסיף את המשימות שבוצעו\r\n  const showCompleted = async () => {\r\n    if (!todosComp) {\r\n      const temp = getComp(1);\r\n      temp.then(data => {\r\n        const mergedTodos = Todos.concat(data);\r\n        mergedTodos.sort((a, b) => a.id - b.id);\r\n        localStorage.setItem(\"compTodos\", JSON.stringify(mergedTodos));\r\n        setTodos(mergedTodos)\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={styles[\"todos-select\"]}>\r\n      <div className={styles[\"lists\"]}>\r\n        <div className={styles[\"todos-list\"]}>\r\n          <input\r\n            type=\"text\"\r\n            value={newTodo}\r\n            onChange={e => setnewTodo(e.target.value)}\r\n          />\r\n          <button onClick={addTodo}>Add Todo</button>\r\n          {Todos.map(todo => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleCheckChange(todo.id, todo.title, !todo.completed)}\r\n                />\r\n                <span className={todo.completed ? '' : 'completed'}>\r\n                  {editingTodoId === todo.id ? (\r\n                    <input\r\n                      className={styles[\"todos-input\"]}\r\n                      type=\"text\"\r\n                      value={editTitle}\r\n                      onChange={(e) => setEditTitle(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    todo.title\r\n                  )}\r\n                </span>\r\n                <div className=\"buttons\">\r\n                  <button onClick={() => handleDelete(todo.id)}>\r\n                    <FaTrash />\r\n                  </button>\r\n                  <button onClick={() => handleEdit(todo.id, todo.title)}>\r\n                    <FaEdit />\r\n                  </button>\r\n                  <button onClick={() => handleSave(todo.id, todo.title, todo.completed)}>\r\n                    <FaSave />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {!todosComp ? (\r\n            <button onClick={() => showCompleted()}>\r\n              SHOW COMPLETED\r\n            </button>\r\n          ) : (\r\n            <h2>this is all users todo</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Posts.js",["153","154","155"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nimport styles from \"./Posts.module.css\";\r\nimport Comments from \"./Comments\";\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [commentsPost, setCommentsPost] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(-1);\r\n\r\n  const navigate = useNavigate();\r\n  const scrollRef = useRef(null);\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  useEffect(() => {\r\n    let savedPosts = localStorage.getItem(\"posts\");\r\n    if (!savedPosts) {\r\n      const url = `http://localhost:3000/posts?userId=${user.id}&_sort=id`;\r\n      getData(url, setPosts);\r\n      localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n    } else {\r\n      setPosts(JSON.parse(savedPosts));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    if (commentsPost) {\r\n      localStorage.setItem(`comments${commentsPost}`, JSON.stringify(comments));\r\n    }\r\n  }, [comments]);\r\n\r\n  useEffect(() => {\r\n    let savedComments = localStorage.getItem(`comments${commentsPost}`);\r\n    if (!savedComments) {\r\n      const url = `http://localhost:3000/comments?postId=${commentsPost}&_sort=id`;\r\n      getData(url, setComments);\r\n      if (commentsPost) {\r\n        localStorage.setItem(\r\n          `comments${commentsPost}`,\r\n          JSON.stringify(comments)\r\n        );\r\n      }\r\n    } else {\r\n      setComments(JSON.parse(savedComments));\r\n    }\r\n  }, [commentsPost]);\r\n\r\n  const getData = async (url, setData) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data))\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        navigate(\"/error\");\r\n      });\r\n  };\r\n\r\n  const addData = async (url, data, setData) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.status === 200) {\r\n        const newData = await response.json();\r\n        setData((prevData) => [...prevData, newData]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding new data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const editData = async (url, data, setData) => {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.status === 200) {\r\n        const updatedRecord = await response.json();\r\n        setData((prevData) => {\r\n          return prevData.map((record) => {\r\n            if (record.id === updatedRecord.id) {\r\n              return updatedRecord;\r\n            }\r\n            return record;\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const deleteData = async (url, recordId, setData) => {\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.ok) {\r\n        setData((prevData) => {\r\n          return prevData.filter((record) => record.id !== recordId);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const handleComments = async (postId) => {\r\n    if (commentsPost === postId) {\r\n      setCommentsPost(null);\r\n      setComments([]);\r\n    } else {\r\n      setCommentsPost(postId);\r\n    }\r\n\r\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n\r\n  const addPost = async () => {\r\n    let title = document.getElementById(\"title\").value;\r\n    let body = document.getElementById(\"body\").value;\r\n    if (!title || !body) {\r\n      alert(\"Title or body are empty\");\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/posts\";\r\n    const post = {\r\n      userId: user.id,\r\n      title: title,\r\n      body: body,\r\n    };\r\n    await addData(url, post, setPosts);\r\n    alert(\"Added successfully!\");\r\n  };\r\n\r\n  const editPost = async (postId) => {\r\n    let title = document.getElementById(\"updatedTitle\").value;\r\n    let body = document.getElementById(\"updatedBody\").value;\r\n    if (!title || !body) {\r\n      alert(\"Title or body are empty\");\r\n      return;\r\n    }\r\n\r\n    const url = `http://localhost:3000/posts/${postId}`;\r\n    const post = {\r\n      id: postId,\r\n      userId: user.id,\r\n      title: title,\r\n      body: body,\r\n    };\r\n    editData(url, post, setPosts);\r\n    setIsEdit(-1);\r\n  };\r\n\r\n  const deletePost = async (postId) => {\r\n    const url = `http://localhost:3000/posts/${postId}`;\r\n    deleteData(url, postId, setPosts);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.posts} ref={scrollRef}>\r\n      <div className={styles[\"new-post\"]}>\r\n        <textarea id=\"title\" placeholder=\"Title\"></textarea>\r\n        <textarea id=\"body\" placeholder=\"Body\"></textarea>\r\n        <button onClick={addPost}>Add Post</button>\r\n      </div>\r\n      <div className={styles[\"grid-container\"]}>\r\n        {posts.map((post) => (\r\n          <div\r\n            className={`${styles[\"post-card\"]} ${\r\n              commentsPost === post.id ? styles.singleColumn : \"\"\r\n            }`}\r\n            key={post.id}\r\n          >\r\n            <div>\r\n              {isEdit === post.id ? (\r\n                <div className={styles[\"edit-post\"]}>\r\n                  <section className={styles[\"edit-input\"]}>\r\n                    <input id=\"updatedTitle\" defaultValue={post.title} />\r\n                    <textarea id=\"updatedBody\" defaultValue={post.body} />\r\n                  </section>\r\n                  <button onClick={() => editPost(post.id)}>Save</button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <h5>{`${post.id}. ${post.title}`}</h5>\r\n                  <p>{post.body}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className={styles[\"post-btns\"]}>\r\n              <button onClick={() => setIsEdit(post.id)}>Edit</button>\r\n              <button onClick={() => deletePost(post.id)}>Delete</button>\r\n              <button\r\n                className={styles[\"comments-btn\"]}\r\n                onClick={() => handleComments(post.id)}\r\n              >\r\n                {commentsPost === post.id\r\n                  ? \"Hide Comments\"\r\n                  : \"Display Comments\"}\r\n              </button>\r\n            </div>\r\n            {commentsPost === post.id && (\r\n              <Comments\r\n                comments={comments}\r\n                postId={post.id}\r\n                setComments={setComments}\r\n                dataHandlers={{ addData, editData, deleteData }}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Error.js",[],[],"C:\\Users\\Bat7\\FSWD\\FSWD7\\client\\src\\pages\\Comments.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\index.js",[],[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\App.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Login.js",["156"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ setUsername }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  if (localStorage.getItem(\"currentUser\")) {\r\n    localStorage.clear();\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !password) {\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/login\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        } else \r\n        //if (response.status === 401) {\r\n          throw \"Wrong username or password\";\r\n       // }\r\n      })\r\n      .then((user) => {\r\n        console.log(user);\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        setUsername(name);\r\n        navigate(`/users/${name}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>LOGIN</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          LOGIN\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/register\">\r\n          REGISTER\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\ProtectedRoute.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Navbar.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\Register.js",["157"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\n\r\nfunction Register() {\r\n\r\n  const [user, setUser] = useState({ username: \"\", password: \"\", first_name: \"\", last_name: \"\", email: \"\", phone: '', address: '', age: \"\" }); // מערך שמכיל את המשתנים של השם והסיסמה\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const url = \"http://localhost:3000/register\";\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        console.log('n');\r\n        if (response.status === 200) {\r\n          console.log(response);\r\n          return response.json();\r\n        } else\r\n          // if (response.status === 409) {\r\n          throw \"Username or password already exists\";\r\n        //  }\r\n      })\r\n      .then((u) => {\r\n        console.log(u);\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        navigate(`/users/${user.username}/info`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h5>REGISTER</h5>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"name\"\r\n            value={user.username}\r\n            onChange={(e) => setUser({ ...user, username: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"password\"\r\n            value={user.password}\r\n            onChange={(e) => setUser({ ...user, password: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"first_name\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"first_name\"\r\n            value={user.first_name}\r\n            onChange={(e) => setUser({ ...user, first_name: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"last_name\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"last_name\"\r\n            value={user.last_name}\r\n            onChange={(e) => setUser({ ...user, last_name: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"email\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"email\"\r\n            value={user.email}\r\n            onChange={(e) => setUser({ ...user, email: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"phone\"\r\n            placeholder=\"phone\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"phone\"\r\n            value={user.phone}\r\n            onChange={(e) => setUser({ ...user, phone: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"address\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"address\"\r\n            value={user.address}\r\n            onChange={(e) => setUser({ ...user, address: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <div className={styles[\"form-row\"]}>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"age\"\r\n            className={styles[\"form-input\"]}\r\n            id=\"age\"\r\n            value={user.age}\r\n            onChange={(e) => setUser({ ...user, age: e.target.value })} // עדכון השדה של השם ב-user\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          REGISTER\r\n        </button>\r\n        <Link className={styles[\"btn-link\"]} to=\"/login\">\r\n          LOGIN\r\n        </Link>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Register;","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Todos.js",["158","159"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Posts.js",["160","161","162"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Info.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Error.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\pages\\Comments.js",[],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\findBook.js",["163","164","165","166","167","168","169"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nfunction findBook(){\r\n\r\n}\r\nexport default findBook;","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\contactTheManager.js",["170","171","172","173","174","175","176"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\nfunction contactTheManager(){\r\n\r\n}\r\nexport default contactTheManager;","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\orderBasket.js",["177","178","179","180","181","182","183"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\nfunction orderBasket(){\r\n\r\n}\r\nexport default orderBasket;","C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\myBooks.js",["184","185","186","187","188","189","190","191","192","193","194","195"],[],"C:\\Users\\Bat7\\FSWD\\Fswd_7\\FSWD7\\client\\src\\libraryPages\\info.js",["196"],[],"import { useState, useEffect } from \"react\";\r\nimport styles from \"./Info.module.css\";\r\n\r\nfunction Info() {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n  const [isEdit, setIsEdit] = useState(0);\r\n\r\n  const editInfo = async () => {\r\n    let fisrtName = document.getElementById(\"updatedFirstName\").value;\r\n    let lastName = document.getElementById(\"updatedLastName\").value;\r\n    let userName = document.getElementById(\"updatedUserName\").value;\r\n    let email = document.getElementById(\"updatedEmail\").value;\r\n    let phone = document.getElementById(\"updatedPhone\").value;\r\n    let address = document.getElementById(\"updatedAddress\").value;\r\n    let age = document.getElementById(\"updatedAge\").value;\r\n\r\n    if (!fisrtName || !lastName || !userName || !email || !phone || !address || !age) {\r\n      alert(\"One or more fields are missing!\");\r\n      return;\r\n    }\r\n\r\n    const userInfo = {\r\n      username: userName,\r\n      first_name: fisrtName,\r\n      last_name: lastName,\r\n      email: email,\r\n      phone: phone,\r\n      address: address,\r\n      age: age,\r\n      id: user.id\r\n    };\r\n\r\n    const url = `http://localhost:3000/Info/${user.id}`;\r\n\r\n    const requestUpdateUserInfo = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userInfo),\r\n    };\r\n\r\n    await fetch(url, requestUpdateUserInfo)\r\n      .then((res) => {\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(userInfo));\r\n        setUser(userInfo);\r\n        setIsEdit(0);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isEdit === 0 ? (\r\n        <div className={styles[\"user-card\"]}>\r\n          <h1>{user.first_name} {user.last_name}</h1>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Username</td>\r\n                <td>{user.username}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Email</td>\r\n                <td>{user.email}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Phone</td>\r\n                <td>{user.phone}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Address</td>\r\n                <td>{user.address}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Age</td>\r\n                <td>{user.age}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <button onClick={() => setIsEdit(1)}>Edit</button>\r\n        </div>\r\n      ) : (\r\n        <div className={styles[\"user-card\"]}>\r\n          <input id=\"updatedFirstName\" defaultValue={user.first_name} />\r\n          <br />\r\n          <input id=\"updatedLastName\" defaultValue={user.last_name} />\r\n          <br />\r\n          <input id=\"updatedUserName\" defaultValue={user.username} />\r\n          <br />\r\n          <input id=\"updatedEmail\" defaultValue={user.email} />\r\n          <br />\r\n          <input id=\"updatedPhone\" defaultValue={user.phone} />\r\n          <br />\r\n          <input id=\"updatedAddress\" defaultValue={user.address} />\r\n          <br />\r\n          <input id=\"updatedAge\" defaultValue={user.age} />\r\n          <br />\r\n          <button onClick={editInfo}>Save</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n",{"ruleId":"197","severity":1,"message":"198","line":36,"column":11,"nodeType":"199","messageId":"200","endLine":36,"endColumn":46},{"ruleId":"197","severity":1,"message":"198","line":32,"column":11,"nodeType":"199","messageId":"200","endLine":32,"endColumn":55},{"ruleId":"201","severity":1,"message":"202","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":19},{"ruleId":"205","severity":1,"message":"206","line":27,"column":6,"nodeType":"207","endLine":27,"endColumn":8,"suggestions":"208"},{"ruleId":"205","severity":1,"message":"209","line":27,"column":6,"nodeType":"207","endLine":27,"endColumn":8,"suggestions":"210"},{"ruleId":"205","severity":1,"message":"211","line":37,"column":6,"nodeType":"207","endLine":37,"endColumn":16,"suggestions":"212"},{"ruleId":"205","severity":1,"message":"213","line":53,"column":6,"nodeType":"207","endLine":53,"endColumn":20,"suggestions":"214"},{"ruleId":"197","severity":1,"message":"198","line":37,"column":11,"nodeType":"199","messageId":"200","endLine":37,"endColumn":46},{"ruleId":"197","severity":1,"message":"198","line":32,"column":11,"nodeType":"199","messageId":"200","endLine":32,"endColumn":55},{"ruleId":"201","severity":1,"message":"202","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":19},{"ruleId":"205","severity":1,"message":"206","line":27,"column":6,"nodeType":"207","endLine":27,"endColumn":8,"suggestions":"215"},{"ruleId":"205","severity":1,"message":"209","line":27,"column":6,"nodeType":"207","endLine":27,"endColumn":8,"suggestions":"216"},{"ruleId":"205","severity":1,"message":"211","line":37,"column":6,"nodeType":"207","endLine":37,"endColumn":16,"suggestions":"217"},{"ruleId":"205","severity":1,"message":"213","line":53,"column":6,"nodeType":"207","endLine":53,"endColumn":20,"suggestions":"218"},{"ruleId":"201","severity":1,"message":"219","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":19},{"ruleId":"201","severity":1,"message":"220","line":2,"column":21,"nodeType":"203","messageId":"204","endLine":2,"endColumn":30},{"ruleId":"201","severity":1,"message":"221","line":2,"column":32,"nodeType":"203","messageId":"204","endLine":2,"endColumn":40},{"ruleId":"201","severity":1,"message":"222","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"223","line":3,"column":19,"nodeType":"203","messageId":"204","endLine":3,"endColumn":25},{"ruleId":"201","severity":1,"message":"224","line":3,"column":27,"nodeType":"203","messageId":"204","endLine":3,"endColumn":33},{"ruleId":"201","severity":1,"message":"219","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":19},{"ruleId":"201","severity":1,"message":"220","line":2,"column":21,"nodeType":"203","messageId":"204","endLine":2,"endColumn":30},{"ruleId":"201","severity":1,"message":"221","line":2,"column":32,"nodeType":"203","messageId":"204","endLine":2,"endColumn":40},{"ruleId":"201","severity":1,"message":"222","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"223","line":3,"column":19,"nodeType":"203","messageId":"204","endLine":3,"endColumn":25},{"ruleId":"201","severity":1,"message":"224","line":3,"column":27,"nodeType":"203","messageId":"204","endLine":3,"endColumn":33},{"ruleId":"201","severity":1,"message":"219","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":19},{"ruleId":"201","severity":1,"message":"220","line":2,"column":21,"nodeType":"203","messageId":"204","endLine":2,"endColumn":30},{"ruleId":"201","severity":1,"message":"221","line":2,"column":32,"nodeType":"203","messageId":"204","endLine":2,"endColumn":40},{"ruleId":"201","severity":1,"message":"222","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"223","line":3,"column":19,"nodeType":"203","messageId":"204","endLine":3,"endColumn":25},{"ruleId":"201","severity":1,"message":"224","line":3,"column":27,"nodeType":"203","messageId":"204","endLine":3,"endColumn":33},{"ruleId":"201","severity":1,"message":"219","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":19},{"ruleId":"201","severity":1,"message":"222","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"223","line":3,"column":19,"nodeType":"203","messageId":"204","endLine":3,"endColumn":25},{"ruleId":"201","severity":1,"message":"224","line":3,"column":27,"nodeType":"203","messageId":"204","endLine":3,"endColumn":33},{"ruleId":"201","severity":1,"message":"225","line":5,"column":12,"nodeType":"203","messageId":"204","endLine":5,"endColumn":19},{"ruleId":"226","severity":2,"message":"227","line":5,"column":32,"nodeType":"203","endLine":5,"endColumn":40},{"ruleId":"226","severity":2,"message":"227","line":6,"column":43,"nodeType":"203","endLine":6,"endColumn":51},{"ruleId":"226","severity":2,"message":"228","line":10,"column":5,"nodeType":"203","endLine":10,"endColumn":14},{"ruleId":"229","severity":2,"message":"230","line":16,"column":58,"nodeType":"203","messageId":"231","endLine":16,"endColumn":64},{"ruleId":"229","severity":2,"message":"232","line":29,"column":11,"nodeType":"203","messageId":"231","endLine":29,"endColumn":19},{"ruleId":"229","severity":2,"message":"233","line":39,"column":9,"nodeType":"203","messageId":"231","endLine":39,"endColumn":15},{"ruleId":"201","severity":1,"message":"220","line":1,"column":20,"nodeType":"203","messageId":"204","endLine":1,"endColumn":29},"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getComp' and 'todos'. Either include them or remove the dependency array.","ArrayExpression",["234"],"React Hook useEffect has missing dependencies: 'getData', 'posts', and 'user.id'. Either include them or remove the dependency array.",["235"],"React Hook useEffect has a missing dependency: 'commentsPost'. Either include it or remove the dependency array.",["236"],"React Hook useEffect has missing dependencies: 'comments' and 'getData'. Either include them or remove the dependency array.",["237"],["238"],["239"],["240"],["241"],"'useNavigate' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FaTrash' is defined but never used.","'FaEdit' is defined but never used.","'FaSave' is defined but never used.","'myBooks' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"myBooks\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"myBooks\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","no-undef","'userid' is not defined.","undef","'setTodos' is not defined.","'retrun' is not defined.",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"242","fix":"250"},{"desc":"244","fix":"251"},{"desc":"246","fix":"252"},{"desc":"248","fix":"253"},"Update the dependencies array to be: [getComp, todos]",{"range":"254","text":"255"},"Update the dependencies array to be: [getData, posts, user.id]",{"range":"256","text":"257"},"Update the dependencies array to be: [comments, commentsPost]",{"range":"258","text":"259"},"Update the dependencies array to be: [comments, commentsPost, getData]",{"range":"260","text":"261"},{"range":"262","text":"255"},{"range":"263","text":"257"},{"range":"264","text":"259"},{"range":"265","text":"261"},[1025,1027],"[getComp, todos]",[899,901],"[getData, posts, user.id]",[1145,1155],"[comments, commentsPost]",[1628,1642],"[comments, commentsPost, getData]",[1025,1027],[899,901],[1145,1155],[1628,1642]]