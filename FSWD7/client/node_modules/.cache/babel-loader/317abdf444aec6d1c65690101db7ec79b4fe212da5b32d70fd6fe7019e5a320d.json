{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bat7\\\\Fswd6\\\\FullStack6\\\\FullStack6\\\\client\\\\src\\\\pages\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport styles from \"./Todos.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [user, setUser] = useState([]);\n  const [Todos, setTodos] = useState([]);\n  const [sortedBy, setSortedBy] = useState(\"random\");\n  const navigate = useNavigate();\n  // .then((data) =>\n  //setAlbums(data.filter((album) => album.userId === user.id))\n  //)\n  useEffect(() => {\n    console.log(\"useEffect\");\n    const objectData = JSON.parse(localStorage.getItem('currentUser'));\n    if (objectData) {\n      setUser(objectData);\n    }\n    console.log(user);\n    if (user) {\n      console.log(user.id);\n      fetch(`http://localhost:3000/todos/${user.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: \"bat7\",\n          password: \"1234\"\n        })\n      }).then(response => {\n        if (response.ok) {\n          console.log(response.status); // הדפסת הסטטוס\n          return response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\n        } else {\n          throw new Error('Error: ' + response.status); // זריקת שגיאה אם יש שגיאה בתגובה\n        }\n      }).then(data => {\n        console.log(data); // הדפסת האובייקט המלא\n        setTodos(data);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }, []);\n\n  // const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n  // const handleChangeTodo = (todoId) => {\n  //   const updatedTodos = todos.map((todo) => {\n  //     if (todo.id === todoId) {\n  //       return { ...todo, completed: !todo.completed };\n  //     } else {\n  //       return todo;\n  //     }\n  //   });\n  //   setTodos(updatedTodos);\n  //   localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  // };\n\n  // const notCompletedTodos = todos.filter((todo) => !todo.completed);\n\n  // const completedTodos = todos.filter((todo) => todo.completed);\n\n  // const sortTodos = (event) => {\n  //   const sortBy = event.target.value;\n  //   setSortedBy(sortBy);\n  // };\n\n  // const sortAndFilterTodos = (todoList) => {\n  //   switch (sortedBy) {\n  //     case \"random\":\n  //       return todoList.sort(() => Math.random() - 0.5);\n  //     case \"alphabetical\":\n  //       return todoList.sort((a, b) => a.title.localeCompare(b.title));\n  //     case \"by id\":\n  //       return todoList.sort((a, b) => a.id - b.id);\n  //     default:\n  //       return todoList;\n  //   }\n  // };\n  const handlerChange = async (id, complete) => {//לעדכן את החיווי\n    // try {\n    //     const response = await fetch(`/todos/${id}`, {\n    //         method: 'PUT',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //         body: JSON.stringify(id, complete),\n    //     });\n\n    //     if (response.ok) {\n    //         console.log('Todo deleted successfully');\n    //         // כאן ניתן לבצע פעולות נוספות אחרי מחיקת המשימה\n    //     } else {\n    //         throw new Error('Failed to delete todo');\n    //     }\n    // } catch (error) {\n    //     console.error('Failed to delete todo:', error.message);\n    // }\n  };\n  // פונקציה שמבצעת בקשת מחיקה לשרת\n  const handleDelete = async id => {\n    // try {\n    //     const response = await fetch(`/todos/${id}`, {\n    //         method: 'DELETE',\n    //     });\n\n    //     if (response.ok) {\n    //         console.log('Todo deleted successfully');\n    //         // כאן ניתן לבצע פעולות נוספות אחרי מחיקת המשימה\n    //     } else {\n    //         throw new Error('Failed to delete todo');\n    //     }\n    // } catch (error) {\n    //     console.error('Failed to delete todo:', error.message);\n    // }\n  };\n  const handleUpdate = async (id, title) => {\n    // try {\n    //     const response = await fetch(`/todos/${id}`, {\n    //         method: 'PUT',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //         body: JSON.stringify(id, title),\n    //     });\n\n    //     if (response.ok) {\n    //         console.log('Todo deleted successfully');\n    //         // כאן ניתן לבצע פעולות נוספות אחרי מחיקת המשימה\n    //     } else {\n    //         throw new Error('Failed to delete todo');\n    //     }\n    // } catch (error) {\n    //     console.error('Failed to delete todo:', error.message);\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles[\"todos-select\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"lists\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"todos-list\"],\n        children: Todos.map(todos => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"todos-item\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"todo-case\"],\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles[\"todos-checkbox\"],\n              type: \"checkbox\",\n              checked: todos.completed,\n              onChange: () => handlerChange(todos.id, todos.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: todos.completed ? '' : 'completed',\n              children: todos.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(todos.id),\n              children: \"DELETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(todos.id, todos.title),\n              children: \"UPDATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, todos.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"V+prT+tcTPYLqJxC+/6MqpdCjlY=\", false, function () {\n  return [useNavigate];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useNavigate","useEffect","useState","styles","jsxDEV","_jsxDEV","Todos","_s","user","setUser","setTodos","sortedBy","setSortedBy","navigate","console","log","objectData","JSON","parse","localStorage","getItem","id","fetch","method","headers","body","stringify","name","password","then","response","ok","status","json","Error","data","catch","error","handlerChange","complete","handleDelete","handleUpdate","title","className","children","map","todos","type","checked","completed","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bat7/Fswd6/FullStack6/FullStack6/client/src/pages/Todos.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styles from \"./Todos.module.css\";\r\n\r\nfunction Todos() {\r\n  const [user, setUser] = useState([]);\r\n  const [Todos, setTodos] = useState([]);\r\n\r\n  const [sortedBy, setSortedBy] = useState(\"random\");\r\n  const navigate = useNavigate();\r\n  // .then((data) =>\r\n  //setAlbums(data.filter((album) => album.userId === user.id))\r\n  //)\r\n  useEffect(() => {\r\n    console.log(\"useEffect\");\r\n    const objectData = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (objectData) {\r\n      setUser(objectData);\r\n    }\r\n    console.log(user);\r\n    if (user) {\r\n      console.log(user.id);\r\n      fetch(`http://localhost:3000/todos/${user.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: \"bat7\",\r\n          password: \"1234\"\r\n        })\r\n      })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            console.log(response.status); // הדפסת הסטטוס\r\n            return response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\r\n          } else {\r\n            throw new Error('Error: ' + response.status); // זריקת שגיאה אם יש שגיאה בתגובה\r\n          }\r\n        })\r\n        .then(data => {\r\n          console.log(data); // הדפסת האובייקט המלא\r\n          setTodos(data);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  // const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  // const handleChangeTodo = (todoId) => {\r\n  //   const updatedTodos = todos.map((todo) => {\r\n  //     if (todo.id === todoId) {\r\n  //       return { ...todo, completed: !todo.completed };\r\n  //     } else {\r\n  //       return todo;\r\n  //     }\r\n  //   });\r\n  //   setTodos(updatedTodos);\r\n  //   localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\r\n  // };\r\n\r\n  // const notCompletedTodos = todos.filter((todo) => !todo.completed);\r\n\r\n  // const completedTodos = todos.filter((todo) => todo.completed);\r\n\r\n  // const sortTodos = (event) => {\r\n  //   const sortBy = event.target.value;\r\n  //   setSortedBy(sortBy);\r\n  // };\r\n\r\n  // const sortAndFilterTodos = (todoList) => {\r\n  //   switch (sortedBy) {\r\n  //     case \"random\":\r\n  //       return todoList.sort(() => Math.random() - 0.5);\r\n  //     case \"alphabetical\":\r\n  //       return todoList.sort((a, b) => a.title.localeCompare(b.title));\r\n  //     case \"by id\":\r\n  //       return todoList.sort((a, b) => a.id - b.id);\r\n  //     default:\r\n  //       return todoList;\r\n  //   }\r\n  // };\r\n  const handlerChange = async (id, complete) => {//לעדכן את החיווי\r\n    // try {\r\n    //     const response = await fetch(`/todos/${id}`, {\r\n    //         method: 'PUT',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json',\r\n    //         },\r\n    //         body: JSON.stringify(id, complete),\r\n    //     });\r\n\r\n    //     if (response.ok) {\r\n    //         console.log('Todo deleted successfully');\r\n    //         // כאן ניתן לבצע פעולות נוספות אחרי מחיקת המשימה\r\n    //     } else {\r\n    //         throw new Error('Failed to delete todo');\r\n    //     }\r\n    // } catch (error) {\r\n    //     console.error('Failed to delete todo:', error.message);\r\n    // }\r\n  }\r\n  // פונקציה שמבצעת בקשת מחיקה לשרת\r\n  const handleDelete = async (id) => {\r\n    // try {\r\n    //     const response = await fetch(`/todos/${id}`, {\r\n    //         method: 'DELETE',\r\n    //     });\r\n\r\n    //     if (response.ok) {\r\n    //         console.log('Todo deleted successfully');\r\n    //         // כאן ניתן לבצע פעולות נוספות אחרי מחיקת המשימה\r\n    //     } else {\r\n    //         throw new Error('Failed to delete todo');\r\n    //     }\r\n    // } catch (error) {\r\n    //     console.error('Failed to delete todo:', error.message);\r\n    // }\r\n  };\r\n  const handleUpdate = async (id, title) => {\r\n    // try {\r\n    //     const response = await fetch(`/todos/${id}`, {\r\n    //         method: 'PUT',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json',\r\n    //         },\r\n    //         body: JSON.stringify(id, title),\r\n    //     });\r\n\r\n    //     if (response.ok) {\r\n    //         console.log('Todo deleted successfully');\r\n    //         // כאן ניתן לבצע פעולות נוספות אחרי מחיקת המשימה\r\n    //     } else {\r\n    //         throw new Error('Failed to delete todo');\r\n    //     }\r\n    // } catch (error) {\r\n    //     console.error('Failed to delete todo:', error.message);\r\n    // }\r\n  };\r\n  return (\r\n    <section className={styles[\"todos-select\"]}>\r\n      {/* <div>\r\n        Sort by:\r\n        <select value={sortedBy} onChange={sortTodos}>\r\n          <option value=\"by id\">By id</option>\r\n          <option value=\"alphabetical\">Alphabetical</option>\r\n          <option value=\"random\">Random</option>\r\n        </select>\r\n      </div> */}\r\n\r\n      <div className={styles[\"lists\"]}>\r\n        <div className={styles[\"todos-list\"]}>\r\n          {Todos.map(todos => (\r\n            <div className={styles[\"todos-item\"]} key={todos.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todos.completed}\r\n                  onChange={() => handlerChange(todos.id, todos.completed)}\r\n                />\r\n                <span className={todos.completed ? '' : 'completed'}>{todos.title}</span>\r\n                <button onClick={() => handleDelete(todos.id)}>DELETE</button>\r\n                <button onClick={() => handleUpdate(todos.id, todos.title)}>UPDATE</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {/* כפתור הוספה */}\r\n          {/* <h4>Not Completed</h4>\r\n          {sortAndFilterTodos(notCompletedTodos).map((todo) => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleChangeTodo(todo.id)}\r\n                />\r\n                <label className={styles[\"todos-label\"]}>{todo.title}</label>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={styles[\"todos-list\"]}>\r\n          <h4>Completed</h4>\r\n          {sortAndFilterTodos(completedTodos).map((todo) => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleChangeTodo(todo.id)}\r\n                />\r\n                <label className={styles[\"todos-label\"]}>{todo.title}</label>\r\n              </div>\r\n            </div>\r\n          ))} */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}