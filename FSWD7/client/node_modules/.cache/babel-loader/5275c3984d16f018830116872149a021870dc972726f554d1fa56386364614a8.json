{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bat7\\\\Fswd6\\\\FullStack6\\\\FullStack6\\\\client\\\\src\\\\pages\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams, useEffect, useState } from \"react\";\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\nimport styles from \"./Todos.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [user, setUser] = useState([]);\n  const [Todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editTitle, setEditTitle] = useState(null);\n  const [editCheck, setEditCheck] = useState(null);\n  const navigate = useNavigate();\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));\n  useEffect(() => {\n    if (Todos.length === 0) {\n      if (!todos) {\n        console.log('fetch');\n\n        // טעינת הנתונים כאן\n        fetchTodos();\n      } else {\n        console.log('set todos');\n        setTodos(todos);\n      }\n    }\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      // .then(response => {\n      if (response.ok) {\n        console.log(response.status); // הדפסת הסטטוס\n        const newData = await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\n        localStorage.setItem(\"currentTodos\", JSON.stringify(newData));\n        setTodos(newData);\n        // } else {\n        //   throw new Error('Error: ' + response.status); // זריקת שגיאה אם יש שגיאה בתגובה\n        // }\n      }\n    } catch (error) {\n      console.error('Failed to fetch todos:', error.message);\n    }\n  };\n  // פונקציה שמבצעת בקשת מחיקה לשרת\n  const handleDelete = async id => {\n    try {\n      // setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\n\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        console.log('Todo deleted successfully');\n        // fetchTodos();\n        setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\n      } else {\n        throw new Error('Failed to delete todo');\n      }\n    } catch (error) {\n      console.error('Failed to delete todo:', error.message);\n    }\n  };\n  const handleUpdate = (id, compn) => {\n    console.log(Todos);\n    setTodos(prevTodos => {\n      const updatedTodos = prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: compn\n          };\n        }\n        return todo;\n      });\n      console.log(updatedTodos);\n      return updatedTodos;\n    });\n  };\n  const editData = async (url, data, setData) => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(url, requestOptions);\n      if (response.status === 200) {\n        const updatedRecord = await response.json();\n        setData(prevData => {\n          return prevData.map(record => {\n            if (record.id === updatedRecord.id) {\n              return updatedRecord;\n            }\n            return record;\n          });\n        });\n      }\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n      navigate(\"/error\");\n    }\n  };\n  const handleSave = async () => {\n    editData(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\n      title: editTitle\n    }, setTodos);\n    // if (editingTodoId != null) {\n    //   setTodos(prevTodos => {\n    //     return prevTodos.map(todo => {\n    //       if (todo.id === editingTodoId) {\n    //         return { ...todo, title: editTitle };\n    //       }\n    //       return todo;\n    //     });\n    //   });\n\n    //   try {\n    //     const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\n    //       method: 'PUT',\n    //       headers: {\n    //         'Content-Type': 'application/json'\n    //       },\n    //       body: JSON.stringify({\n    //         title: editTitle\n    //       })\n    //     });\n    //     if (response.ok) {\n    //       const updatedTodo = await response.json();\n    //       console.log(updatedTodo);\n    //       fetchTodos();\n\n    //       // עדכון המשימה בסטור או מסד הנתונים\n    //     } else {\n    //       throw new Error('Error: ' + response.status);\n    //     }\n    //   } catch (error) {\n    //     console.error(error);\n    //   }\n    // }\n  };\n\n  const update = async (id, completed) => {\n    await setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: completed\n          };\n        }\n        return todo;\n      });\n    });\n  };\n  const handleCheckChange = async (id, completed) => {\n    // update();\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: completed\n          };\n        }\n        return todo;\n      });\n    });\n    console.log(id, completed);\n    try {\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          completed: completed\n          // co: editTitle\n        })\n      });\n\n      if (response.ok) {\n        // fetchTodos();\n\n        console.log(response);\n        console.log(Todos);\n        // handleUpdate(id, completed)\n        console.log(Todos);\n\n        // עדכון המשימה בסטור או מסד הנתונים\n      } else {\n        throw new Error('Error: ' + response.status);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEdit = async (id, title) => {\n    await setEditingTodoId(id);\n    await setEditTitle(title);\n    console.log(editTitle);\n  };\n  const addTodo = () => {\n    // let title = document.getElementById(\"title\").value;\n    // let body = document.getElementById(\"body\").value;\n    console.log(editTitle);\n    if (editTitle.trim() !== '') {\n      const url = \"http://localhost:3000/todos\";\n      const todo = {\n        userId: usern.id,\n        title: editTitle,\n        completed: 0\n      };\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo)\n      };\n      fetch(url, requestOptions).then(response => {\n        if (response.status === 200) {\n          console.log(response.json);\n          const newTodo = response.json();\n          setTodos(prevTodos => [...prevTodos, newTodo]);\n          setEditTitle('');\n        }\n      }).catch(error => {\n        console.error(\"Error adding new post:\", error);\n        navigate(\"/error\");\n      });\n    } else {\n      console.log(\"the title cant be blank\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles[\"todos-select\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"lists\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"todos-list\"],\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editTitle,\n          onChange: e => setEditTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTodo,\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), Todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"todos-item\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"todo-case\"],\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles[\"todos-checkbox\"],\n              type: \"checkbox\",\n              checked: todo.completed\n              // onChange={(e) => setEditCheck(!e.target.value)}\n              ,\n              onChange: () => handleCheckChange(todo.id, !todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: todo.completed ? '' : 'completed',\n              children: editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles[\"todos-input\"],\n                type: \"text\",\n                value: editTitle,\n                onChange: e => setEditTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this) : todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(todo.id),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(todo.id, todo.title),\n              children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(),\n              children: /*#__PURE__*/_jsxDEV(FaSave, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"dnWSZcoYrNhLFbibs2izZkBTXqE=\", false, function () {\n  return [useNavigate];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useNavigate","useParams","useEffect","useState","FaTrash","FaEdit","FaSave","styles","jsxDEV","_jsxDEV","Todos","_s","user","setUser","setTodos","editingTodoId","setEditingTodoId","editTitle","setEditTitle","editCheck","setEditCheck","navigate","usern","JSON","parse","localStorage","getItem","todos","length","console","log","fetchTodos","response","fetch","id","method","headers","ok","status","newData","json","setItem","stringify","error","message","handleDelete","prevTodos","filter","todo","Error","handleUpdate","compn","updatedTodos","map","completed","editData","url","data","setData","requestOptions","body","updatedRecord","prevData","record","handleSave","title","update","handleCheckChange","handleEdit","addTodo","trim","userId","then","newTodo","catch","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/Bat7/Fswd6/FullStack6/FullStack6/client/src/pages/Todos.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nimport styles from \"./Todos.module.css\";\r\n\r\nfunction Todos() {\r\n  const [user, setUser] = useState([]);\r\n  const [Todos, setTodos] = useState([]);\r\n  const [editingTodoId, setEditingTodoId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState(null);\r\n  const [editCheck, setEditCheck] = useState(null);\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\r\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));\r\n\r\n  useEffect(() => {\r\n    if (Todos.length === 0) {\r\n      if(!todos){\r\n\r\n        console.log('fetch');\r\n      \r\n      // טעינת הנתונים כאן\r\n      fetchTodos();\r\n      }\r\n      else{\r\n        console.log('set todos');\r\n        setTodos(todos)\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n\r\n      })\r\n      // .then(response => {\r\n      if (response.ok) {\r\n        console.log(response.status); // הדפסת הסטטוס\r\n        const newData = await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\r\n        localStorage.setItem(\"currentTodos\", JSON.stringify(newData));\r\n\r\n        setTodos(newData);\r\n        // } else {\r\n        //   throw new Error('Error: ' + response.status); // זריקת שגיאה אם יש שגיאה בתגובה\r\n        // }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Failed to fetch todos:', error.message);\r\n    }\r\n\r\n  };\r\n  // פונקציה שמבצעת בקשת מחיקה לשרת\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\r\n\r\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Todo deleted successfully');\r\n        // fetchTodos();\r\n        setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\r\n      } else {\r\n        throw new Error('Failed to delete todo');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to delete todo:', error.message);\r\n    }\r\n\r\n  };\r\n  const handleUpdate = (id, compn) => {\r\n    console.log(Todos);\r\n    setTodos(prevTodos => {\r\n      const updatedTodos = prevTodos.map(todo => {\r\n        if (todo.id === id) {\r\n          return { ...todo, completed: compn };\r\n        }\r\n        return todo;\r\n      });\r\n      console.log(updatedTodos);\r\n      return updatedTodos;\r\n    });\r\n  };\r\n\r\n  const editData = async (url, data, setData) => {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.status === 200) {\r\n        const updatedRecord = await response.json();\r\n        setData((prevData) => {\r\n          return prevData.map((record) => {\r\n            if (record.id === updatedRecord.id) {\r\n              return updatedRecord;\r\n            }\r\n            return record;\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n  const handleSave = async () => {\r\n    editData(`http://localhost:3000/todos/update-title/${editingTodoId}`,{ title: editTitle},setTodos)\r\n    // if (editingTodoId != null) {\r\n    //   setTodos(prevTodos => {\r\n    //     return prevTodos.map(todo => {\r\n    //       if (todo.id === editingTodoId) {\r\n    //         return { ...todo, title: editTitle };\r\n    //       }\r\n    //       return todo;\r\n    //     });\r\n    //   });\r\n\r\n    //   try {\r\n    //     const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\r\n    //       method: 'PUT',\r\n    //       headers: {\r\n    //         'Content-Type': 'application/json'\r\n    //       },\r\n    //       body: JSON.stringify({\r\n    //         title: editTitle\r\n    //       })\r\n    //     });\r\n    //     if (response.ok) {\r\n    //       const updatedTodo = await response.json();\r\n    //       console.log(updatedTodo);\r\n    //       fetchTodos();\r\n\r\n    //       // עדכון המשימה בסטור או מסד הנתונים\r\n    //     } else {\r\n    //       throw new Error('Error: ' + response.status);\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(error);\r\n    //   }\r\n    // }\r\n  }\r\n  const update = async (id, completed) => {\r\n    await setTodos(prevTodos => {\r\n      return prevTodos.map(todo => {\r\n        if (todo.id === id) {\r\n          return { ...todo, completed: completed };\r\n        }\r\n        return todo;\r\n      });\r\n    });\r\n  }\r\n  const handleCheckChange = async (id, completed) => {\r\n    // update();\r\n    setTodos(prevTodos => {\r\n      return prevTodos.map(todo => {\r\n        if (todo.id === id) {\r\n          return { ...todo, completed: completed };\r\n        }\r\n        return todo;\r\n      });\r\n    });\r\n\r\n    console.log(id, completed);\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          completed: completed,\r\n          // co: editTitle\r\n        })\r\n      });\r\n      if (response.ok) {\r\n\r\n        // fetchTodos();\r\n\r\n        console.log(response);\r\n        console.log(Todos);\r\n        // handleUpdate(id, completed)\r\n        console.log(Todos);\r\n\r\n        // עדכון המשימה בסטור או מסד הנתונים\r\n      } else {\r\n        throw new Error('Error: ' + response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  const handleEdit =async (id,title) => {\r\n    await setEditingTodoId(id);\r\n    await setEditTitle(title);\r\n    console.log(editTitle);\r\n  };\r\n\r\n  const addTodo = () => {\r\n    // let title = document.getElementById(\"title\").value;\r\n    // let body = document.getElementById(\"body\").value;\r\n    console.log(editTitle);\r\n    if (editTitle.trim() !== '') {\r\n\r\n      const url = \"http://localhost:3000/todos\";\r\n      const todo = {\r\n        userId: usern.id,\r\n        title: editTitle,\r\n        completed: 0,\r\n      };\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(todo),\r\n      };\r\n\r\n      fetch(url, requestOptions)\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            console.log(response.json);\r\n            const newTodo = response.json();\r\n            setTodos(prevTodos => [...prevTodos, newTodo]);\r\n            setEditTitle('');\r\n\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding new post:\", error);\r\n          navigate(\"/error\");\r\n        });\r\n    }\r\n    else {\r\n      console.log(\"the title cant be blank\");\r\n    }\r\n  };\r\n  return (\r\n\r\n    <section className={styles[\"todos-select\"]}>\r\n      <div className={styles[\"lists\"]}>\r\n\r\n        <div className={styles[\"todos-list\"]}>\r\n          <input\r\n            type=\"text\"\r\n            value={editTitle}\r\n            onChange={e => setEditTitle(e.target.value)}\r\n          />\r\n          <button onClick={addTodo}>Add Todo</button>\r\n          {Todos.map(todo => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  // onChange={(e) => setEditCheck(!e.target.value)}\r\n                  onChange={() => handleCheckChange(todo.id, !todo.completed)}\r\n                />\r\n                <span className={todo.completed ? '' : 'completed'}>\r\n                  {editingTodoId === todo.id ? (\r\n                    <input\r\n                      className={styles[\"todos-input\"]}\r\n                      type=\"text\"\r\n                      value={editTitle}\r\n                      onChange={(e) => setEditTitle(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    todo.title\r\n                  )}\r\n                </span>\r\n                {/* {todos.title}</span> */}\r\n                <button onClick={() => handleDelete(todo.id)}>\r\n                  <FaTrash />\r\n                </button>\r\n                <button onClick={() => handleEdit(todo.id,todo.title)}>\r\n                  <FaEdit />\r\n                </button>\r\n                <button onClick={() => handleSave()}>\r\n                  <FaSave />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {/* כפתור הוספה */}\r\n          {/* <h4>Not Completed</h4>\r\n          {sortAndFilterTodos(notCompletedTodos).map((todo) => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleChangeTodo(todo.id)}\r\n                />\r\n                <label className={styles[\"todos-label\"]}>{todo.title}</label>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={styles[\"todos-list\"]}>\r\n          <h4>Completed</h4>\r\n          {sortAndFilterTodos(completedTodos).map((todo) => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleChangeTodo(todo.id)}\r\n                />\r\n                <label className={styles[\"todos-label\"]}>{todo.title}</label>\r\n              </div>\r\n            </div>\r\n          ))} */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}