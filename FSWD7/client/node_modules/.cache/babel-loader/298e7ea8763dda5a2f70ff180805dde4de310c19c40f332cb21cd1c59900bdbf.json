{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bat7\\\\Fswd6\\\\FullStack6\\\\FullStack6\\\\client\\\\src\\\\pages\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styles from \"./Comments.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments(_ref) {\n  _s();\n  let {\n    comments,\n    postId,\n    setComments,\n    dataHandlers\n  } = _ref;\n  const {\n    addData,\n    editData,\n    deleteData\n  } = dataHandlers;\n  const [newComment, setNewComment] = useState(false);\n  const [isEdit, setIsEdit] = useState(-1);\n  const addComment = async postId => {\n    let name = document.getElementById(\"commentName\").value;\n    let email = document.getElementById(\"commentEmail\").value;\n    let body = document.getElementById(\"commentBody\").value;\n    const url = \"http://localhost:3000/comments\";\n    const comment = {\n      postId: postId,\n      name: name,\n      email: email,\n      body: body\n    };\n    addData(url, comment, setComments);\n    setNewComment(false);\n  };\n  const editComment = async commentId => {\n    let name = document.getElementById(\"updatedCName\").value;\n    let email = document.getElementById(\"updatedCEmail\").value;\n    let body = document.getElementById(\"updatedCBody\").value;\n    const url = `http://localhost:3000/comments/${commentId}`;\n    const comment = {\n      postId: postId,\n      id: commentId,\n      name: name,\n      email: email,\n      body: body\n    };\n    editData(url, comment, setComments);\n    setIsEdit(-1);\n  };\n  const deleteComment = async commentId => {\n    const url = `http://localhost:3000/comments/${commentId}`;\n    deleteData(url, commentId, setComments);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.comments,\n    children: [comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isEdit === comment.id ? /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles[\"edit-comment\"],\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"updatedCName\",\n          defaultValue: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"updatedCEmail\",\n          defaultValue: comment.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"updatedCBody\",\n          defaultValue: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editComment(comment.id),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: `${comment.id}. ${comment.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: comment.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEdit(comment.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteComment(comment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)), !newComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles[\"add-comment\"],\n      onClick: () => setNewComment(true),\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), newComment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"new-comment\"],\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"commentName\",\n        placeholder: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"commentEmail\",\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"commentBody\",\n        placeholder: \"body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addComment(postId),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"HePeTProRvKgfvUfW3cxTILLtEI=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","styles","jsxDEV","_jsxDEV","Comments","_ref","_s","comments","postId","setComments","dataHandlers","addData","editData","deleteData","newComment","setNewComment","isEdit","setIsEdit","addComment","name","document","getElementById","value","email","body","url","comment","editComment","commentId","id","deleteComment","className","children","map","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Bat7/Fswd6/FullStack6/FullStack6/client/src/pages/Comments.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport styles from \"./Comments.module.css\";\r\n\r\nfunction Comments({ comments, postId, setComments, dataHandlers }) {\r\n  const { addData, editData, deleteData } = dataHandlers;\r\n  const [newComment, setNewComment] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(-1);\r\n\r\n  const addComment = async (postId) => {\r\n    let name = document.getElementById(\"commentName\").value;\r\n    let email = document.getElementById(\"commentEmail\").value;\r\n    let body = document.getElementById(\"commentBody\").value;\r\n\r\n    const url = \"http://localhost:3000/comments\";\r\n    const comment = {\r\n      postId: postId,\r\n      name: name,\r\n      email: email,\r\n      body: body,\r\n    };\r\n\r\n    addData(url, comment, setComments);\r\n    setNewComment(false);\r\n  };\r\n\r\n  const editComment = async (commentId) => {\r\n    let name = document.getElementById(\"updatedCName\").value;\r\n    let email = document.getElementById(\"updatedCEmail\").value;\r\n    let body = document.getElementById(\"updatedCBody\").value;\r\n\r\n    const url = `http://localhost:3000/comments/${commentId}`;\r\n    const comment = {\r\n      postId: postId,\r\n      id: commentId,\r\n      name: name,\r\n      email: email,\r\n      body: body,\r\n    };\r\n    editData(url, comment, setComments);\r\n    setIsEdit(-1);\r\n  };\r\n\r\n  const deleteComment = async (commentId) => {\r\n    const url = `http://localhost:3000/comments/${commentId}`;\r\n    deleteData(url, commentId, setComments);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.comments}>\r\n      {comments.map((comment) => (\r\n        <div>\r\n          {isEdit === comment.id ? (\r\n            <section className={styles[\"edit-comment\"]}>\r\n              <input id=\"updatedCName\" defaultValue={comment.name} />\r\n              <input id=\"updatedCEmail\" defaultValue={comment.email} />\r\n              <textarea id=\"updatedCBody\" defaultValue={comment.body} />\r\n              <button onClick={() => editComment(comment.id)}>Save</button>\r\n            </section>\r\n          ) : (\r\n            <section>\r\n              <h5>{`${comment.id}. ${comment.name}`}</h5>\r\n              <h6>{comment.email}</h6>\r\n              <p>{comment.body}</p>\r\n              <button onClick={() => setIsEdit(comment.id)}>Edit</button>\r\n              <button onClick={() => deleteComment(comment.id)}>Delete</button>\r\n            </section>\r\n          )}\r\n        </div>\r\n      ))}\r\n      {!newComment && (\r\n        <button\r\n          className={styles[\"add-comment\"]}\r\n          onClick={() => setNewComment(true)}\r\n        >\r\n          Add Comment\r\n        </button>\r\n      )}\r\n      {newComment && (\r\n        <div className={styles[\"new-comment\"]}>\r\n          <textarea id=\"commentName\" placeholder=\"name\"></textarea>\r\n          <textarea id=\"commentEmail\" placeholder=\"email\"></textarea>\r\n          <textarea id=\"commentBody\" placeholder=\"body\"></textarea>\r\n          <button onClick={() => addComment(postId)}>Submit</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}