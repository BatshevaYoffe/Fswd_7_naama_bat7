{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bat7\\\\Fswd6\\\\FullStack6\\\\FullStack6\\\\client\\\\src\\\\pages\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams, useEffect, useState } from \"react\";\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\nimport styles from \"./Todos.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [Todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editTitle, setEditTitle] = useState(null);\n  // const [completed, setCompleted] = useState(todo.completed);\n  const [newTodo, setnewTodo] = useState([]);\n  const navigate = useNavigate();\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));\n  useEffect(() => {\n    if (Todos.length === 0) {\n      // if (!todos) {\n\n      // console.log('fetch');\n\n      // טעינת הנתונים כאן\n      fetchTodos();\n    }\n    // else {\n    //   console.log('set todos');\n    //   setTodos(todos)\n    // }\n    // }\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        console.log(response.status); // הדפסת הסטטוס\n        const newData = await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\n        localStorage.setItem(\"currentTodos\", JSON.stringify(newData));\n        setTodos(newData);\n      }\n    } catch (error) {\n      console.error('Failed to fetch todos:', error.message);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      console.log(\"delete\");\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"if\");\n      console.log(response);\n      if (response.ok) {\n        console.log('Todo deleted successfully');\n        setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\n        localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\n      } else {\n        throw new Error('Failed to delete todo');\n      }\n    } catch (error) {\n      console.error('Failed to delete todo:', error.message);\n    }\n  };\n  const handleSave = async (id, title, c) => {\n    console.log(id, title, c);\n    if (editingTodoId != null) {\n      try {\n        const todo = {\n          userId: usern.id,\n          id: editingTodoId,\n          title: editTitle,\n          completed: c ? 1 : 0\n        };\n        console.log(todo);\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(todo)\n        });\n        console.log(response);\n        if (response.ok) {\n          const updatedTodo = await response.json();\n          console.log(updatedTodo);\n          await setTodos(prevTodos => {\n            return prevTodos.map(todo => {\n              if (todo.id === updatedTodo.id) {\n                return updatedTodo;\n              }\n              return todo;\n            });\n          });\n          await localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\n        }\n      } catch (error) {\n        console.error(\"Error updating data:\", error);\n        navigate(\"/error\");\n      } finally {\n        setEditingTodoId(null);\n        setEditTitle(null);\n      }\n    }\n  };\n  const handleCheckChange = async (id, title, completed) => {\n    console.log(id, completed);\n    try {\n      const todo = {\n        userId: usern.id,\n        id: id,\n        title: title,\n        completed: completed\n      };\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(todo)\n      });\n      console.log(response);\n      if (response.ok) {\n        const updatedTodo = await response.json();\n        await setTodos(prevTodos => {\n          return prevTodos.map(todo => {\n            if (todo.id === updatedTodo.id) {\n              return updatedTodo;\n            }\n            return todo;\n          });\n        });\n      } else {\n        throw new Error('Error: ' + response.status);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEdit = async (id, title) => {\n    await setEditingTodoId(id);\n    await setEditTitle(title);\n  };\n  const addTodo = async () => {\n    if (newTodo.trim() !== '') {\n      try {\n        const todo = {\n          userId: usern.id,\n          id: 0,\n          title: newTodo,\n          completed: 0\n        };\n        const response = await fetch(`http://localhost:3000/todos`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(todo)\n        });\n        console.log(response);\n        if (response.ok) {\n          const updatedTodo = await response.json();\n          await setTodos(prevTodos => [...prevTodos, updatedTodo]);\n        } else {\n          throw new Error('Error: ' + response.status);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    console.log(newTodo);\n    // if (newTodo.trim() !== '') {\n\n    //   const url = \"http://localhost:3000/todos\";\n    //   const todo = {\n    //     userId: usern.id,\n    //     title: newTodo,\n    //     completed: 0,\n    //   };\n    //   const requestOptions = {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify(todo),\n    //   };\n\n    //   fetch(url, requestOptions)\n    //     .then((response) => {\n    //       if (response.status === 200) {\n    //         // console.log(response.json);\n    //         const newTodo = response.json();\n    //         console.log(response);\n    //         setTodos(prevTodos => [...prevTodos, newTodo]);\n    //         localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\n\n    //         setnewTodo('');\n\n    //       }\n    //     })\n    //     .catch((error) => {\n    //       console.error(\"Error adding new post:\", error);\n    //       navigate(\"/error\");\n    //     });\n    // }\n    // else {\n    //   console.log(\"the title cant be blank\");\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles[\"todos-select\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"lists\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"todos-list\"],\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTodo,\n          onChange: e => setnewTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTodo,\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), Todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"todos-item\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"todo-case\"],\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles[\"todos-checkbox\"],\n              type: \"checkbox\",\n              checked: todo.completed\n              // checked={completed}\n              // onChange={() => setCompleted(!completed)}\n              // onChange={(e) => setEditCheck(!e.target.value)}\n              ,\n              onChange: () => handleCheckChange(todo.id, todo.title, !todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: todo.completed ? '' : 'completed',\n              children: editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles[\"todos-input\"],\n                type: \"text\",\n                value: editTitle,\n                onChange: e => setEditTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this) : todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(todo.id),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(todo.id, todo.title),\n              children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(todo.id, todo.title, todo.completed),\n              children: /*#__PURE__*/_jsxDEV(FaSave, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"mtTKLlAV0QbEtlBpmyaKF4KLafs=\", false, function () {\n  return [useNavigate];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useNavigate","useParams","useEffect","useState","FaTrash","FaEdit","FaSave","styles","jsxDEV","_jsxDEV","Todos","_s","setTodos","editingTodoId","setEditingTodoId","editTitle","setEditTitle","newTodo","setnewTodo","navigate","usern","JSON","parse","localStorage","getItem","todos","length","fetchTodos","response","fetch","id","method","headers","ok","console","log","status","newData","json","setItem","stringify","error","message","handleDelete","prevTodos","filter","todo","Error","handleSave","title","c","userId","completed","body","updatedTodo","map","handleCheckChange","handleEdit","addTodo","trim","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/Bat7/Fswd6/FullStack6/FullStack6/client/src/pages/Todos.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nimport styles from \"./Todos.module.css\";\r\n\r\nfunction Todos() {\r\n  const [Todos, setTodos] = useState([]);\r\n  const [editingTodoId, setEditingTodoId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState(null);\r\n  // const [completed, setCompleted] = useState(todo.completed);\r\n  const [newTodo, setnewTodo] = useState([]);\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\r\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));\r\n\r\n  useEffect(() => {\r\n    if (Todos.length === 0) {\r\n      // if (!todos) {\r\n\r\n      // console.log('fetch');\r\n\r\n      // טעינת הנתונים כאן\r\n      fetchTodos();\r\n      }\r\n      // else {\r\n      //   console.log('set todos');\r\n      //   setTodos(todos)\r\n      // }\r\n    // }\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n\r\n      })\r\n      if (response.ok) {\r\n        console.log(response.status); // הדפסת הסטטוס\r\n        const newData = await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\r\n        localStorage.setItem(\"currentTodos\", JSON.stringify(newData));\r\n        setTodos(newData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch todos:', error.message);\r\n    }\r\n  };\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      console.log(\"delete\");\r\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      console.log(\"if\");\r\n      console.log(response);\r\n      if (response.ok) {\r\n        console.log('Todo deleted successfully');\r\n        setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\r\n        localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n      } else {\r\n        throw new Error('Failed to delete todo');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to delete todo:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleSave = async (id, title, c) => {\r\n    console.log(id,title,c);\r\n    if (editingTodoId != null) {\r\n      try {\r\n        const todo={\r\n          userId: usern.id,\r\n          id: editingTodoId,\r\n          title: editTitle,\r\n          completed:c ? 1 : 0\r\n        };\r\n        console.log(todo);\r\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(todo)\r\n        });\r\n        console.log(response);\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          console.log(updatedTodo);\r\n\r\n          await setTodos(prevTodos => {\r\n            return prevTodos.map(todo => {\r\n              if (todo.id === updatedTodo.id) {\r\n                return updatedTodo;\r\n              }\r\n              return todo;\r\n            });\r\n          });\r\n          await localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating data:\", error);\r\n        navigate(\"/error\");\r\n      }finally {\r\n        setEditingTodoId(null);\r\n        setEditTitle(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckChange = async (id,title,completed) => {\r\n    console.log(id, completed);\r\n    try {\r\n      const todo={\r\n        userId: usern.id,\r\n        id: id,\r\n        title: title,\r\n        completed:completed\r\n      };\r\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(todo)\r\n      });\r\n      console.log(response);\r\n      if (response.ok) {\r\n        const updatedTodo = await response.json();\r\n\r\n        await setTodos(prevTodos => {\r\n          return prevTodos.map(todo => {\r\n            if (todo.id === updatedTodo.id) {\r\n              return updatedTodo;\r\n            }\r\n            return todo;\r\n          });\r\n        });\r\n\r\n      } else {\r\n        throw new Error('Error: ' + response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const handleEdit = async (id, title) => {\r\n    await setEditingTodoId(id);\r\n    await setEditTitle(title);\r\n  };\r\n\r\n  const addTodo = async() => {\r\n    if (newTodo.trim() !== '') {\r\n\r\n    try {\r\n      const todo={\r\n        userId: usern.id,\r\n        id: 0,\r\n        title: newTodo,\r\n        completed:0\r\n      };\r\n      const response = await fetch(`http://localhost:3000/todos`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(todo)\r\n      });\r\n      console.log(response);\r\n      if (response.ok) {\r\n        const updatedTodo = await response.json();\r\n        await setTodos(prevTodos => [...prevTodos, updatedTodo]);\r\n      } else {\r\n        throw new Error('Error: ' + response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n    console.log(newTodo);\r\n    // if (newTodo.trim() !== '') {\r\n\r\n    //   const url = \"http://localhost:3000/todos\";\r\n    //   const todo = {\r\n    //     userId: usern.id,\r\n    //     title: newTodo,\r\n    //     completed: 0,\r\n    //   };\r\n    //   const requestOptions = {\r\n    //     method: \"POST\",\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //     },\r\n    //     body: JSON.stringify(todo),\r\n    //   };\r\n\r\n    //   fetch(url, requestOptions)\r\n    //     .then((response) => {\r\n    //       if (response.status === 200) {\r\n    //         // console.log(response.json);\r\n    //         const newTodo = response.json();\r\n    //         console.log(response);\r\n    //         setTodos(prevTodos => [...prevTodos, newTodo]);\r\n    //         localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n\r\n    //         setnewTodo('');\r\n\r\n    //       }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.error(\"Error adding new post:\", error);\r\n    //       navigate(\"/error\");\r\n    //     });\r\n    // }\r\n    // else {\r\n    //   console.log(\"the title cant be blank\");\r\n    // }\r\n  };\r\n  return (\r\n\r\n    <section className={styles[\"todos-select\"]}>\r\n      <div className={styles[\"lists\"]}>\r\n\r\n        <div className={styles[\"todos-list\"]}>\r\n          <input\r\n            type=\"text\"\r\n            value={newTodo}\r\n            onChange={e => setnewTodo(e.target.value)}\r\n          />\r\n          <button onClick={addTodo}>Add Todo</button>\r\n          {Todos.map(todo => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  // checked={completed}\r\n                  // onChange={() => setCompleted(!completed)}\r\n                  // onChange={(e) => setEditCheck(!e.target.value)}\r\n                  onChange={() => handleCheckChange(todo.id,todo.title, !todo.completed)}\r\n                />\r\n                <span className={todo.completed ? '' : 'completed'}>\r\n                  {editingTodoId === todo.id ? (\r\n                    <input\r\n                      className={styles[\"todos-input\"]}\r\n                      type=\"text\"\r\n                      value={editTitle}\r\n                      onChange={(e) => setEditTitle(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    todo.title\r\n                  )}\r\n                </span>\r\n                <button onClick={() => handleDelete(todo.id)}>\r\n                  <FaTrash />\r\n                </button>\r\n                <button onClick={() => handleEdit(todo.id, todo.title)}>\r\n                  <FaEdit />\r\n                </button>\r\n                <button onClick={() => handleSave(todo.id, todo.title, todo.completed)}>\r\n                  <FaSave />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}