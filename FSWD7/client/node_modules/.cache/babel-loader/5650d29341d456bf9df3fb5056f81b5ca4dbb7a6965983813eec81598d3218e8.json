{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bat7\\\\Fswd6\\\\FullStack6\\\\FullStack6\\\\client\\\\src\\\\pages\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams, useEffect, useState } from \"react\";\nimport styles from \"./Todos.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [user, setUser] = useState([]);\n  const [Todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editTitle, setEditTitle] = useState(null);\n  const [editCheck, setEditCheck] = useState(null);\n  const navigate = useNavigate();\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\n  useEffect(() => {\n    if (Todos.length === 0) {\n      // טעינת הנתונים כאן\n      fetchTodos();\n    }\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      // .then(response => {\n      if (response.ok) {\n        console.log(response.status); // הדפסת הסטטוס\n        const newData = await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\n        console.log(newData);\n        setTodos(newData);\n        console.log(Todos);\n        // } else {\n        //   throw new Error('Error: ' + response.status); // זריקת שגיאה אם יש שגיאה בתגובה\n        // }\n      }\n    } catch (error) {\n      console.error('Failed to fetch todos:', error.message);\n    }\n  };\n  // פונקציה שמבצעת בקשת מחיקה לשרת\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        console.log('Todo deleted successfully');\n        fetchTodos();\n        // setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\n      } else {\n        throw new Error('Failed to delete todo');\n      }\n    } catch (error) {\n      console.error('Failed to delete todo:', error.message);\n    }\n  };\n  const handleUpdate = (id, compn) => {\n    console.log(Todos);\n    setTodos(prevTodos => {\n      const updatedTodos = prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: compn\n          };\n        }\n        return todo;\n      });\n      console.log(updatedTodos);\n      return updatedTodos;\n    });\n  };\n  const handleSave = async () => {\n    if (editingTodoId != null) {\n      try {\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            title: editTitle\n          })\n        });\n        if (response.ok) {\n          const updatedTodo = await response.json();\n          console.log(updatedTodo);\n          fetchTodos();\n\n          // עדכון המשימה בסטור או מסד הנתונים\n        } else {\n          throw new Error('Error: ' + response.status);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const update = async (id, completed) => {\n    await setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: completed\n          };\n        }\n        return todo;\n      });\n    });\n  };\n  const handleCheckChange = async (id, completed) => {\n    // update();\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: completed\n          };\n        }\n        return todo;\n      });\n    });\n    console.log(id, completed);\n    try {\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          completed: completed\n          // co: editTitle\n        })\n      });\n\n      if (response.ok) {\n        fetchTodos();\n        console.log(response);\n        console.log(Todos);\n        // handleUpdate(id, completed)\n        console.log(Todos);\n\n        // עדכון המשימה בסטור או מסד הנתונים\n      } else {\n        throw new Error('Error: ' + response.status);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEdit = id => {\n    setEditingTodoId(id);\n  };\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const addTodo = () => {\n    // let title = document.getElementById(\"title\").value;\n    // let body = document.getElementById(\"body\").value;\n    console.log(newTodoTitle);\n    const url = \"http://localhost:3000/todos\";\n    const todo = {\n      userId: usern.id,\n      title: newTodoTitle,\n      completed: 0\n    };\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(todo)\n    };\n    fetch(url, requestOptions).then(response => {\n      if (response.status === 200) {\n        console.log(response.json);\n        const newTodo = response.json();\n        setTodos(prevTodos => [...prevTodos, newTodo]);\n        setNewTodoTitle('');\n      }\n    }).catch(error => {\n      console.error(\"Error adding new post:\", error);\n      navigate(\"/error\");\n    });\n    // const newTodo = { id: Date.now(), title: newTodoTitle, completed: false };\n    // setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles[\"todos-select\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"lists\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"todos-list\"],\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTodoTitle,\n          onChange: e => setNewTodoTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTodo,\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), Todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"todos-item\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"todo-case\"],\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles[\"todos-checkbox\"],\n              type: \"checkbox\",\n              checked: todo.completed\n              // onChange={(e) => setEditCheck(!e.target.value)}\n              ,\n              onChange: () => handleCheckChange(todo.id, !todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: todo.completed ? '' : 'completed',\n              children: editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles[\"todos-input\"],\n                type: \"text\",\n                value: editTitle,\n                onChange: e => setEditTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this) : todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(todo.id),\n              children: \"DELETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(todo.id),\n              children: \"EDIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(),\n              children: \"SAVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"eTC7hi/TMc0YoCSHQBd18znk0lk=\", false, function () {\n  return [useNavigate];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useNavigate","useParams","useEffect","useState","styles","jsxDEV","_jsxDEV","Todos","_s","user","setUser","setTodos","editingTodoId","setEditingTodoId","editTitle","setEditTitle","editCheck","setEditCheck","navigate","usern","JSON","parse","localStorage","getItem","length","fetchTodos","response","fetch","id","method","headers","ok","console","log","status","newData","json","error","message","handleDelete","Error","handleUpdate","compn","prevTodos","updatedTodos","map","todo","completed","handleSave","body","stringify","title","updatedTodo","update","handleCheckChange","handleEdit","newTodoTitle","setNewTodoTitle","addTodo","url","userId","requestOptions","then","newTodo","catch","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/Bat7/Fswd6/FullStack6/FullStack6/client/src/pages/Todos.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\n\r\nimport styles from \"./Todos.module.css\";\r\n\r\nfunction Todos() {\r\n  const [user, setUser] = useState([]);\r\n  const [Todos, setTodos] = useState([]);\r\n  const [editingTodoId, setEditingTodoId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState(null);\r\n  const [editCheck, setEditCheck] = useState(null);\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\r\n  useEffect(() => {\r\n    if (Todos.length === 0) {\r\n      // טעינת הנתונים כאן\r\n      fetchTodos();\r\n    }\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response =await fetch(`http://localhost:3000/todos/${usern.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n\r\n      })\r\n        // .then(response => {\r\n          if (response.ok) {\r\n            console.log(response.status); // הדפסת הסטטוס\r\n            const newData=await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\r\n            console.log(newData);\r\n            setTodos(newData);\r\n            console.log(Todos);\r\n          // } else {\r\n          //   throw new Error('Error: ' + response.status); // זריקת שגיאה אם יש שגיאה בתגובה\r\n          // }\r\n        }\r\n \r\n    } catch (error) {\r\n      console.error('Failed to fetch todos:', error.message);\r\n    }\r\n\r\n  };\r\n  // פונקציה שמבצעת בקשת מחיקה לשרת\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Todo deleted successfully');\r\n        fetchTodos();\r\n        // setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\r\n      } else {\r\n        throw new Error('Failed to delete todo');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to delete todo:', error.message);\r\n    }\r\n  };\r\n  const handleUpdate = (id, compn) => {\r\n    console.log(Todos);\r\n    setTodos(prevTodos => {\r\n      const updatedTodos = prevTodos.map(todo => {\r\n        if (todo.id === id) {\r\n          return { ...todo, completed: compn };\r\n        }\r\n        return todo;\r\n      });\r\n      console.log(updatedTodos);\r\n      return updatedTodos;\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (editingTodoId != null) {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            title: editTitle\r\n          })\r\n        });\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          console.log(updatedTodo);\r\n          fetchTodos();\r\n\r\n          // עדכון המשימה בסטור או מסד הנתונים\r\n        } else {\r\n          throw new Error('Error: ' + response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\nconst update=async(id,completed)=>{\r\n  await setTodos(prevTodos => {\r\n    return prevTodos.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, completed: completed };\r\n      }\r\n      return todo;\r\n    });\r\n  });\r\n}\r\n  const handleCheckChange = async (id, completed) => {\r\n// update();\r\nsetTodos(prevTodos => {\r\n  return prevTodos.map(todo => {\r\n    if (todo.id === id) {\r\n      return { ...todo, completed: completed };\r\n    }\r\n    return todo;\r\n  });\r\n});\r\n    console.log(id, completed);\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          completed: completed,\r\n          // co: editTitle\r\n        })\r\n      });\r\n      if (response.ok) {\r\n        fetchTodos();\r\n\r\n        console.log(response);\r\n        console.log(Todos);\r\n        // handleUpdate(id, completed)\r\n        console.log(Todos);\r\n\r\n        // עדכון המשימה בסטור או מסד הנתונים\r\n      } else {\r\n        throw new Error('Error: ' + response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  const handleEdit = (id) => {\r\n    setEditingTodoId(id);\r\n  };\r\n  const [newTodoTitle, setNewTodoTitle] = useState('');\r\n\r\n  const addTodo = () => {\r\n    // let title = document.getElementById(\"title\").value;\r\n    // let body = document.getElementById(\"body\").value;\r\n    console.log(newTodoTitle);\r\n    const url = \"http://localhost:3000/todos\";\r\n    const todo = {\r\n      userId: usern.id,\r\n      title: newTodoTitle,\r\n      completed: 0,\r\n    };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(todo),\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          console.log(response.json);\r\n          const newTodo = response.json();\r\n          setTodos(prevTodos => [...prevTodos, newTodo]);\r\n          setNewTodoTitle('');\r\n\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding new post:\", error);\r\n        navigate(\"/error\");\r\n      });\r\n    // const newTodo = { id: Date.now(), title: newTodoTitle, completed: false };\r\n    // setTodos(prevTodos => [...prevTodos, newTodo]);\r\n  };\r\n  return (\r\n\r\n    <section className={styles[\"todos-select\"]}>\r\n      <div className={styles[\"lists\"]}>\r\n\r\n        <div className={styles[\"todos-list\"]}>\r\n          <input\r\n            type=\"text\"\r\n            value={newTodoTitle}\r\n            onChange={e => setNewTodoTitle(e.target.value)}\r\n          />\r\n          <button onClick={addTodo}>Add Todo</button>\r\n          {Todos.map(todo => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  // onChange={(e) => setEditCheck(!e.target.value)}\r\n                  onChange={() => handleCheckChange(todo.id, !todo.completed)}\r\n                />\r\n                <span className={todo.completed ? '' : 'completed'}>\r\n                  {editingTodoId === todo.id ? (\r\n                    <input\r\n                      className={styles[\"todos-input\"]}\r\n                      type=\"text\"\r\n                      value={editTitle}\r\n                      onChange={(e) => setEditTitle(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    todo.title\r\n                  )}\r\n                </span>\r\n                {/* {todos.title}</span> */}\r\n                <button onClick={() => handleDelete(todo.id)}>DELETE</button>\r\n                <button onClick={() => handleEdit(todo.id)}>EDIT</button>\r\n                <button onClick={() => handleSave()}>SAVE</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {/* כפתור הוספה */}\r\n          {/* <h4>Not Completed</h4>\r\n          {sortAndFilterTodos(notCompletedTodos).map((todo) => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleChangeTodo(todo.id)}\r\n                />\r\n                <label className={styles[\"todos-label\"]}>{todo.title}</label>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={styles[\"todos-list\"]}>\r\n          <h4>Completed</h4>\r\n          {sortAndFilterTodos(completedTodos).map((todo) => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleChangeTodo(todo.id)}\r\n                />\r\n                <label className={styles[\"todos-label\"]}>{todo.title}</label>\r\n              </div>\r\n            </div>\r\n          ))} */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}