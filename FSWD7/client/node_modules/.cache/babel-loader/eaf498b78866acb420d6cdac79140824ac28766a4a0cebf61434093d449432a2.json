{"ast":null,"code":"var _jsxFileName = \"C:\\\\full stack\\\\Fswd_7_naama_bat7\\\\FSWD7\\\\client\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport styles from \"./Posts.module.css\";\nimport Comments from \"./Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [commentsPost, setCommentsPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isEdit, setIsEdit] = useState(-1);\n  const navigate = useNavigate();\n  const scrollRef = useRef(null);\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  useEffect(() => {\n    let savedPosts = localStorage.getItem(\"posts\");\n    if (!savedPosts) {\n      const url = `http://localhost:3000/posts?userId=${user.id}&_sort=id`;\n      getData(url, setPosts);\n      localStorage.setItem(\"posts\", JSON.stringify(posts));\n    } else {\n      setPosts(JSON.parse(savedPosts));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n  }, [posts]);\n  useEffect(() => {\n    if (commentsPost) {\n      localStorage.setItem(`comments${commentsPost}`, JSON.stringify(comments));\n    }\n  }, [comments]);\n  useEffect(() => {\n    let savedComments = localStorage.getItem(`comments${commentsPost}`);\n    if (!savedComments) {\n      const url = `http://localhost:3000/comments?postId=${commentsPost}&_sort=id`;\n      getData(url, setComments);\n      if (commentsPost) {\n        localStorage.setItem(`comments${commentsPost}`, JSON.stringify(comments));\n      }\n    } else {\n      setComments(JSON.parse(savedComments));\n    }\n  }, [commentsPost]);\n  const getData = async (url, setData) => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(url, requestOptions).then(response => response.json()).then(data => setData(data)).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      navigate(\"/error\");\n    });\n  };\n  const addData = async (url, data, setData) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(url, requestOptions);\n      if (response.status === 200) {\n        const newData = await response.json();\n        setData(prevData => [...prevData, newData]);\n      }\n    } catch (error) {\n      console.error(\"Error adding new data:\", error);\n      navigate(\"/error\");\n    }\n  };\n  const editData = async (url, data, setData) => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    try {\n      const response = await fetch(url, requestOptions);\n      if (response.status === 200) {\n        const updatedRecord = await response.json();\n        setData(prevData => {\n          return prevData.map(record => {\n            if (record.id === updatedRecord.id) {\n              return updatedRecord;\n            }\n            return record;\n          });\n        });\n      }\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n      navigate(\"/error\");\n    }\n  };\n  const deleteData = async (url, recordId, setData) => {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch(url, requestOptions);\n      if (response.ok) {\n        setData(prevData => {\n          return prevData.filter(record => record.id !== recordId);\n        });\n      }\n    } catch (error) {\n      console.error(\"Error deleting data:\", error);\n      navigate(\"/error\");\n    }\n  };\n  const handleComments = async postId => {\n    if (commentsPost === postId) {\n      setCommentsPost(null);\n      setComments([]);\n    } else {\n      setCommentsPost(postId);\n    }\n    scrollRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n  const addPost = async () => {\n    let title = document.getElementById(\"title\").value;\n    let body = document.getElementById(\"body\").value;\n    if (!title || !body) {\n      alert(\"Title or body are empty\");\n      return;\n    }\n    const url = \"http://localhost:3000/posts\";\n    const post = {\n      userId: user.id,\n      title: title,\n      body: body\n    };\n    await addData(url, post, setPosts);\n    alert(\"Added successfully!\");\n  };\n  const editPost = async postId => {\n    let title = document.getElementById(\"updatedTitle\").value;\n    let body = document.getElementById(\"updatedBody\").value;\n    if (!title || !body) {\n      alert(\"Title or body are empty\");\n      return;\n    }\n    const url = `http://localhost:3000/posts/${postId}`;\n    const post = {\n      id: postId,\n      userId: user.id,\n      title: title,\n      body: body\n    };\n    editData(url, post, setPosts);\n    setIsEdit(-1);\n  };\n  const deletePost = async postId => {\n    const url = `http://localhost:3000/posts/${postId}`;\n    deleteData(url, postId, setPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.posts,\n    ref: scrollRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"new-post\"],\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"title\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        placeholder: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"grid-container\"],\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles[\"post-card\"]} ${commentsPost === post.id ? styles.singleColumn : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: isEdit === post.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"edit-post\"],\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              className: styles[\"edit-input\"],\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"updatedTitle\",\n                defaultValue: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"updatedBody\",\n                defaultValue: post.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editPost(post.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: `${post.id}. ${post.title}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"post-btns\"],\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsEdit(post.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deletePost(post.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles[\"comments-btn\"],\n            onClick: () => handleComments(post.id),\n            children: commentsPost === post.id ? \"Hide Comments\" : \"Display Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), commentsPost === post.id && /*#__PURE__*/_jsxDEV(Comments, {\n          comments: comments,\n          postId: post.id,\n          setComments: setComments,\n          dataHandlers: {\n            addData,\n            editData,\n            deleteData\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"NcT+AZsOaUlMKoqSlrFnL7evhhg=\", false, function () {\n  return [useNavigate];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useNavigate","useEffect","useState","useRef","styles","Comments","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","commentsPost","setCommentsPost","comments","setComments","isEdit","setIsEdit","navigate","scrollRef","user","JSON","parse","localStorage","getItem","savedPosts","url","id","getData","setItem","stringify","savedComments","setData","requestOptions","method","headers","fetch","then","response","json","data","catch","error","console","addData","body","status","newData","prevData","editData","updatedRecord","map","record","deleteData","recordId","ok","filter","handleComments","postId","current","scrollIntoView","behavior","block","addPost","title","document","getElementById","value","alert","post","userId","editPost","deletePost","className","ref","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","singleColumn","defaultValue","dataHandlers","_c","$RefreshReg$"],"sources":["C:/full stack/Fswd_7_naama_bat7/FSWD7/client/src/pages/Posts.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nimport styles from \"./Posts.module.css\";\r\nimport Comments from \"./Comments\";\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [commentsPost, setCommentsPost] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(-1);\r\n\r\n  const navigate = useNavigate();\r\n  const scrollRef = useRef(null);\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  useEffect(() => {\r\n    let savedPosts = localStorage.getItem(\"posts\");\r\n    if (!savedPosts) {\r\n      const url = `http://localhost:3000/posts?userId=${user.id}&_sort=id`;\r\n      getData(url, setPosts);\r\n      localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n    } else {\r\n      setPosts(JSON.parse(savedPosts));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    if (commentsPost) {\r\n      localStorage.setItem(`comments${commentsPost}`, JSON.stringify(comments));\r\n    }\r\n  }, [comments]);\r\n\r\n  useEffect(() => {\r\n    let savedComments = localStorage.getItem(`comments${commentsPost}`);\r\n    if (!savedComments) {\r\n      const url = `http://localhost:3000/comments?postId=${commentsPost}&_sort=id`;\r\n      getData(url, setComments);\r\n      if (commentsPost) {\r\n        localStorage.setItem(\r\n          `comments${commentsPost}`,\r\n          JSON.stringify(comments)\r\n        );\r\n      }\r\n    } else {\r\n      setComments(JSON.parse(savedComments));\r\n    }\r\n  }, [commentsPost]);\r\n\r\n  const getData = async (url, setData) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data))\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        navigate(\"/error\");\r\n      });\r\n  };\r\n\r\n  const addData = async (url, data, setData) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.status === 200) {\r\n        const newData = await response.json();\r\n        setData((prevData) => [...prevData, newData]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding new data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const editData = async (url, data, setData) => {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.status === 200) {\r\n        const updatedRecord = await response.json();\r\n        setData((prevData) => {\r\n          return prevData.map((record) => {\r\n            if (record.id === updatedRecord.id) {\r\n              return updatedRecord;\r\n            }\r\n            return record;\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const deleteData = async (url, recordId, setData) => {\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, requestOptions);\r\n      if (response.ok) {\r\n        setData((prevData) => {\r\n          return prevData.filter((record) => record.id !== recordId);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n\r\n  const handleComments = async (postId) => {\r\n    if (commentsPost === postId) {\r\n      setCommentsPost(null);\r\n      setComments([]);\r\n    } else {\r\n      setCommentsPost(postId);\r\n    }\r\n\r\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n\r\n  const addPost = async () => {\r\n    let title = document.getElementById(\"title\").value;\r\n    let body = document.getElementById(\"body\").value;\r\n    if (!title || !body) {\r\n      alert(\"Title or body are empty\");\r\n      return;\r\n    }\r\n\r\n    const url = \"http://localhost:3000/posts\";\r\n    const post = {\r\n      userId: user.id,\r\n      title: title,\r\n      body: body,\r\n    };\r\n    await addData(url, post, setPosts);\r\n    alert(\"Added successfully!\");\r\n  };\r\n\r\n  const editPost = async (postId) => {\r\n    let title = document.getElementById(\"updatedTitle\").value;\r\n    let body = document.getElementById(\"updatedBody\").value;\r\n    if (!title || !body) {\r\n      alert(\"Title or body are empty\");\r\n      return;\r\n    }\r\n\r\n    const url = `http://localhost:3000/posts/${postId}`;\r\n    const post = {\r\n      id: postId,\r\n      userId: user.id,\r\n      title: title,\r\n      body: body,\r\n    };\r\n    editData(url, post, setPosts);\r\n    setIsEdit(-1);\r\n  };\r\n\r\n  const deletePost = async (postId) => {\r\n    const url = `http://localhost:3000/posts/${postId}`;\r\n    deleteData(url, postId, setPosts);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.posts} ref={scrollRef}>\r\n      <div className={styles[\"new-post\"]}>\r\n        <textarea id=\"title\" placeholder=\"Title\"></textarea>\r\n        <textarea id=\"body\" placeholder=\"Body\"></textarea>\r\n        <button onClick={addPost}>Add Post</button>\r\n      </div>\r\n      <div className={styles[\"grid-container\"]}>\r\n        {posts.map((post) => (\r\n          <div\r\n            className={`${styles[\"post-card\"]} ${\r\n              commentsPost === post.id ? styles.singleColumn : \"\"\r\n            }`}\r\n            key={post.id}\r\n          >\r\n            <div>\r\n              {isEdit === post.id ? (\r\n                <div className={styles[\"edit-post\"]}>\r\n                  <section className={styles[\"edit-input\"]}>\r\n                    <input id=\"updatedTitle\" defaultValue={post.title} />\r\n                    <textarea id=\"updatedBody\" defaultValue={post.body} />\r\n                  </section>\r\n                  <button onClick={() => editPost(post.id)}>Save</button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <h5>{`${post.id}. ${post.title}`}</h5>\r\n                  <p>{post.body}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className={styles[\"post-btns\"]}>\r\n              <button onClick={() => setIsEdit(post.id)}>Edit</button>\r\n              <button onClick={() => deletePost(post.id)}>Delete</button>\r\n              <button\r\n                className={styles[\"comments-btn\"]}\r\n                onClick={() => handleComments(post.id)}\r\n              >\r\n                {commentsPost === post.id\r\n                  ? \"Hide Comments\"\r\n                  : \"Display Comments\"}\r\n              </button>\r\n            </div>\r\n            {commentsPost === post.id && (\r\n              <Comments\r\n                comments={comments}\r\n                postId={post.id}\r\n                setComments={setComments}\r\n                dataHandlers={{ addData, editData, deleteData }}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}