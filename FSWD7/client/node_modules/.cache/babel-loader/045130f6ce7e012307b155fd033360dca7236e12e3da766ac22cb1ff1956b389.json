{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bat7\\\\Fswd6\\\\FullStack6\\\\FullStack6\\\\client\\\\src\\\\pages\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams, useEffect, useState } from \"react\";\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\nimport styles from \"./Todos.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [Todos, setTodos] = useState([]); //רשימה של כל הטודוס\n  const [editingTodoId, setEditingTodoId] = useState(null); //שומר את מספר הכותרת שעושים עליה שינוי\n  const [editTitle, setEditTitle] = useState(null); //השינוי שעושים לכותרת\n  const [newTodo, setnewTodo] = useState([]); //תוכן של טודו חדש\n\n  const navigate = useNavigate();\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));\n  useEffect(() => {\n    if (Todos.length === 0) {\n      if (!todos) {\n        console.log('fetch');\n        fetchTodos();\n      } else {\n        console.log('set todos');\n        setTodos(todos);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\n  }, [Todos]);\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const newData = await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\n        setTodos(newData);\n      }\n    } catch (error) {\n      console.error('Failed to fetch todos:', error.message);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      console.log(\"delete\");\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"if\");\n      console.log(response);\n      if (response.ok) {\n        console.log('Todo deleted successfully');\n        setData(prevData => {\n          return prevTodos.filter(todo => todo.id !== id);\n        });\n      } else {\n        throw new Error('Failed to delete todo');\n      }\n    } catch (error) {\n      console.error('Failed to delete todo:', error.message);\n    }\n  };\n  const handleSave = async (id, title, c) => {\n    if (editingTodoId != null) {\n      try {\n        const todo = {\n          userId: usern.id,\n          id: editingTodoId,\n          title: editTitle,\n          completed: c ? 1 : 0\n        };\n        console.log(todo);\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(todo)\n        });\n        console.log(response);\n        if (response.ok) {\n          const updatedTodo = await response.json();\n          await setTodos(prevTodos => {\n            return prevTodos.map(todo => {\n              if (todo.id === updatedTodo.id) {\n                return updatedTodo;\n              }\n              return todo;\n            });\n          });\n        }\n      } catch (error) {\n        console.error(\"Error updating data:\", error);\n        navigate(\"/error\");\n      } finally {\n        setEditingTodoId(null);\n        setEditTitle(null);\n      }\n    }\n  };\n  const handleCheckChange = async (id, title, completed) => {\n    try {\n      const todo = {\n        userId: usern.id,\n        id: id,\n        title: title,\n        completed: completed\n      };\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(todo)\n      });\n      console.log(response);\n      if (response.ok) {\n        const updatedTodo = await response.json();\n        await setTodos(prevTodos => {\n          return prevTodos.map(todo => {\n            if (todo.id === updatedTodo.id) {\n              return updatedTodo;\n            }\n            return todo;\n          });\n        });\n      } else {\n        throw new Error('Error: ' + response.status);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEdit = async (id, title) => {\n    setEditingTodoId(id);\n    setEditTitle(title);\n  };\n  const addTodo = async () => {\n    if (newTodo.trim() !== '') {\n      try {\n        const todo = {\n          userId: usern.id,\n          id: 0,\n          title: newTodo,\n          completed: 0\n        };\n        const response = await fetch(`http://localhost:3000/todos`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(todo)\n        });\n        console.log(response);\n        if (response.ok) {\n          const updatedTodo = await response.json();\n          await setTodos(prevTodos => [...prevTodos, updatedTodo]);\n          setnewTodo('');\n        } else {\n          throw new Error('Error: ' + response.status);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles[\"todos-select\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"lists\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"todos-list\"],\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTodo,\n          onChange: e => setnewTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTodo,\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), Todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"todos-item\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"todo-case\"],\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles[\"todos-checkbox\"],\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => handleCheckChange(todo.id, todo.title, !todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: todo.completed ? '' : 'completed',\n              children: editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles[\"todos-input\"],\n                type: \"text\",\n                value: editTitle,\n                onChange: e => setEditTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this) : todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(todo.id),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(todo.id, todo.title),\n              children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(todo.id, todo.title, todo.completed),\n              children: /*#__PURE__*/_jsxDEV(FaSave, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"rQRI37pfoQGq31NSsFruau3rYZk=\", false, function () {\n  return [useNavigate];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useNavigate","useParams","useEffect","useState","FaTrash","FaEdit","FaSave","styles","jsxDEV","_jsxDEV","Todos","_s","setTodos","editingTodoId","setEditingTodoId","editTitle","setEditTitle","newTodo","setnewTodo","navigate","usern","JSON","parse","localStorage","getItem","todos","length","console","log","fetchTodos","setItem","stringify","response","fetch","id","method","headers","ok","newData","json","error","message","handleDelete","setData","prevData","prevTodos","filter","todo","Error","handleSave","title","c","userId","completed","body","updatedTodo","map","handleCheckChange","status","handleEdit","addTodo","trim","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/Bat7/Fswd6/FullStack6/FullStack6/client/src/pages/Todos.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nimport styles from \"./Todos.module.css\";\r\n\r\nfunction Todos() {\r\n  const [Todos, setTodos] = useState([]);//רשימה של כל הטודוס\r\n  const [editingTodoId, setEditingTodoId] = useState(null);//שומר את מספר הכותרת שעושים עליה שינוי\r\n  const [editTitle, setEditTitle] = useState(null);//השינוי שעושים לכותרת\r\n  const [newTodo, setnewTodo] = useState([]);//תוכן של טודו חדש\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\r\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));\r\n\r\n  useEffect(() => {\r\n    if (Todos.length === 0) {\r\n      if (!todos) {\r\n\r\n      console.log('fetch');\r\n      fetchTodos();\r\n    }\r\n    else {\r\n      console.log('set todos');\r\n      setTodos(todos)\r\n    }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n  }, [Todos]);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      })\r\n      if (response.ok) {\r\n        const newData = await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\r\n        setTodos(newData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch todos:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      console.log(\"delete\");\r\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      console.log(\"if\");\r\n      console.log(response);\r\n      if (response.ok) {\r\n        console.log('Todo deleted successfully');\r\n        setData((prevData) => {\r\n          return prevTodos.filter(todo => todo.id !== id);\r\n        });\r\n      } else {\r\n        throw new Error('Failed to delete todo');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to delete todo:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleSave = async (id, title, c) => {\r\n    if (editingTodoId != null) {\r\n      try {\r\n        const todo = {\r\n          userId: usern.id,\r\n          id: editingTodoId,\r\n          title: editTitle,\r\n          completed: c ? 1 : 0\r\n        };\r\n        console.log(todo);\r\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(todo)\r\n        });\r\n        console.log(response);\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          await setTodos(prevTodos => {\r\n            return prevTodos.map(todo => {\r\n              if (todo.id === updatedTodo.id) {\r\n                return updatedTodo;\r\n              }\r\n              return todo;\r\n            });\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating data:\", error);\r\n        navigate(\"/error\");\r\n      } finally {\r\n        setEditingTodoId(null);\r\n        setEditTitle(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckChange = async (id, title, completed) => {\r\n    try {\r\n      const todo = {\r\n        userId: usern.id,\r\n        id: id,\r\n        title: title,\r\n        completed: completed\r\n      };\r\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(todo)\r\n      });\r\n      console.log(response);\r\n      if (response.ok) {\r\n        const updatedTodo = await response.json();\r\n\r\n        await setTodos(prevTodos => {\r\n          return prevTodos.map(todo => {\r\n            if (todo.id === updatedTodo.id) {\r\n              return updatedTodo;\r\n            }\r\n            return todo;\r\n          });\r\n        });\r\n\r\n      } else {\r\n        throw new Error('Error: ' + response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const handleEdit = async (id, title) => {\r\n     setEditingTodoId(id);\r\n     setEditTitle(title);\r\n  };\r\n\r\n  const addTodo = async () => {\r\n    if (newTodo.trim() !== '') {\r\n\r\n      try {\r\n        const todo = {\r\n          userId: usern.id,\r\n          id: 0,\r\n          title: newTodo,\r\n          completed: 0\r\n        };\r\n        const response = await fetch(`http://localhost:3000/todos`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(todo)\r\n        });\r\n        console.log(response);\r\n        if (response.ok) {\r\n          const updatedTodo = await response.json();\r\n          await setTodos(prevTodos => [...prevTodos, updatedTodo]);\r\n          setnewTodo('');\r\n        } else {\r\n          throw new Error('Error: ' + response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <section className={styles[\"todos-select\"]}>\r\n      <div className={styles[\"lists\"]}>\r\n        <div className={styles[\"todos-list\"]}>\r\n          <input\r\n            type=\"text\"\r\n            value={newTodo}\r\n            onChange={e => setnewTodo(e.target.value)}\r\n          />\r\n          <button onClick={addTodo}>Add Todo</button>\r\n          {Todos.map(todo => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleCheckChange(todo.id, todo.title, !todo.completed)}\r\n                />\r\n                <span className={todo.completed ? '' : 'completed'}>\r\n                  {editingTodoId === todo.id ? (\r\n                    <input\r\n                      className={styles[\"todos-input\"]}\r\n                      type=\"text\"\r\n                      value={editTitle}\r\n                      onChange={(e) => setEditTitle(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    todo.title\r\n                  )}\r\n                </span>\r\n                <button onClick={() => handleDelete(todo.id)}>\r\n                  <FaTrash />\r\n                </button>\r\n                <button onClick={() => handleEdit(todo.id, todo.title)}>\r\n                  <FaEdit />\r\n                </button>\r\n                <button onClick={() => handleSave(todo.id, todo.title, todo.completed)}>\r\n                  <FaSave />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}