{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bat7\\\\Fswd6\\\\FullStack6\\\\FullStack6\\\\client\\\\src\\\\pages\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams, useEffect, useState } from \"react\";\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\nimport styles from \"./Todos.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos() {\n  _s();\n  const [user, setUser] = useState([]);\n  const [Todos, setTodos] = useState([]);\n  const [editingTodoId, setEditingTodoId] = useState(null);\n  const [editTitle, setEditTitle] = useState(null);\n  const [editCheck, setEditCheck] = useState(null);\n  const [newTodo, setnewTodo] = useState([]);\n  const navigate = useNavigate();\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));\n  useEffect(() => {\n    if (Todos.length === 0) {\n      // if (!todos) {\n\n      console.log('fetch');\n\n      // טעינת הנתונים כאן\n      fetchTodos();\n      // }\n      // else {\n      //   console.log('set todos');\n      //   setTodos(todos)\n      // }\n    }\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      // .then(response => {\n      if (response.ok) {\n        console.log(response.status); // הדפסת הסטטוס\n        const newData = await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\n        localStorage.setItem(\"currentTodos\", JSON.stringify(newData));\n        setTodos(newData);\n        // } else {\n        //   throw new Error('Error: ' + response.status); // זריקת שגיאה אם יש שגיאה בתגובה\n        // }\n      }\n    } catch (error) {\n      console.error('Failed to fetch todos:', error.message);\n    }\n  };\n  // פונקציה שמבצעת בקשת מחיקה לשרת\n  const handleDelete = async id => {\n    try {\n      // setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\n\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        console.log('Todo deleted successfully');\n        // fetchTodos();\n        setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\n        localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\n      } else {\n        throw new Error('Failed to delete todo');\n      }\n    } catch (error) {\n      console.error('Failed to delete todo:', error.message);\n    }\n  };\n  const handleUpdate = (id, compn) => {\n    console.log(Todos);\n    setTodos(prevTodos => {\n      const updatedTodos = prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: compn\n          };\n        }\n        return todo;\n      });\n      console.log(updatedTodos);\n      return updatedTodos;\n    });\n  };\n  const handleSave = async (id, title, completed) => {\n    console.log(id, title, completed);\n    console.log(editingTodoId);\n    console.log(editTitle);\n    if (editingTodoId != null) {\n      try {\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: usern.id,\n            title: editTitle,\n            completed: completed\n          })\n        });\n        console.log(response);\n        if (response.ok) {\n          console.log(\"handleSave\");\n          const updatedTodo = await response.json();\n          console.log(updatedTodo);\n          setTodos(prevTodos => {\n            return prevTodos.map(todo => {\n              if (todo.id === updatedTodo.id) {\n                return updatedTodo;\n              }\n              return todo;\n            });\n          });\n        }\n      } catch (error) {\n        console.error(\"Error updating data:\", error);\n        navigate(\"/error\");\n      }\n    }\n  };\n  const update = async (id, completed) => {\n    await setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: completed\n          };\n        }\n        return todo;\n      });\n    });\n  };\n  const handleCheckChange = async (id, completed) => {\n    // update();\n\n    localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\n    console.log(id, completed);\n    try {\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          completed: completed\n          // co: editTitle\n        })\n      });\n\n      if (response.ok) {\n        const updatedTodos = await response.json();\n        setTodos(prevTodos => {\n          return prevTodos.map(todo => {\n            if (todo.id === updatedTodos.id) {\n              return {\n                ...todo,\n                completed: completed\n              };\n            }\n            return todo;\n          });\n        });\n      }\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n      navigate(\"/error\");\n    }\n  };\n  const handleEdit = async (id, title) => {\n    await setEditingTodoId(id);\n    await setEditTitle(title);\n    console.log(editTitle);\n  };\n  const addTodo = () => {\n    console.log(newTodo);\n    if (newTodo.trim() !== '') {\n      const url = \"http://localhost:3000/todos\";\n      const todo = {\n        userId: usern.id,\n        title: newTodo,\n        completed: 0\n      };\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(todo)\n      };\n      fetch(url, requestOptions).then(response => {\n        if (response.status === 200) {\n          console.log(response.json);\n          const newTodo = response.json();\n          setTodos(prevTodos => [...prevTodos, newTodo]);\n          localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\n          setnewTodo('');\n        }\n      }).catch(error => {\n        console.error(\"Error adding new post:\", error);\n        navigate(\"/error\");\n      });\n    } else {\n      console.log(\"the title cant be blank\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles[\"todos-select\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"lists\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"todos-list\"],\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTodo,\n          onChange: e => setnewTodo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTodo,\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), Todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"todos-item\"],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"todo-case\"],\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles[\"todos-checkbox\"],\n              type: \"checkbox\",\n              checked: todo.completed\n              // onChange={(e) => setEditCheck(!e.target.value)}\n              ,\n              onChange: () => handleCheckChange(todo.id, !todo.completed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: todo.completed ? '' : 'completed',\n              children: editingTodoId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles[\"todos-input\"],\n                type: \"text\",\n                value: editTitle,\n                onChange: e => setEditTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this) : todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(todo.id),\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(todo.id, todo.title),\n              children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(todo.id, todo.title, todo.completed),\n              children: /*#__PURE__*/_jsxDEV(FaSave, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(Todos, \"RsR1FODKVZag2IOYtHn0wVYY/lM=\", false, function () {\n  return [useNavigate];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useNavigate","useParams","useEffect","useState","FaTrash","FaEdit","FaSave","styles","jsxDEV","_jsxDEV","Todos","_s","user","setUser","setTodos","editingTodoId","setEditingTodoId","editTitle","setEditTitle","editCheck","setEditCheck","newTodo","setnewTodo","navigate","usern","JSON","parse","localStorage","getItem","todos","length","console","log","fetchTodos","response","fetch","id","method","headers","ok","status","newData","json","setItem","stringify","error","message","handleDelete","prevTodos","filter","todo","Error","handleUpdate","compn","updatedTodos","map","completed","handleSave","title","body","userId","updatedTodo","update","handleCheckChange","handleEdit","addTodo","trim","url","requestOptions","then","catch","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/Bat7/Fswd6/FullStack6/FullStack6/client/src/pages/Todos.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { useParams, useEffect, useState } from \"react\";\r\nimport { FaTrash, FaEdit, FaSave } from 'react-icons/fa';\r\n\r\nimport styles from \"./Todos.module.css\";\r\n\r\nfunction Todos() {\r\n  const [user, setUser] = useState([]);\r\n  const [Todos, setTodos] = useState([]);\r\n  const [editingTodoId, setEditingTodoId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState(null);\r\n  const [editCheck, setEditCheck] = useState(null);\r\n  const [newTodo, setnewTodo] = useState([]);\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const usern = JSON.parse(localStorage.getItem('currentUser'));\r\n  const todos = JSON.parse(localStorage.getItem(\"currentTodos\"));\r\n\r\n  useEffect(() => {\r\n    if (Todos.length === 0) {\r\n      // if (!todos) {\r\n\r\n      console.log('fetch');\r\n\r\n      // טעינת הנתונים כאן\r\n      fetchTodos();\r\n      // }\r\n      // else {\r\n      //   console.log('set todos');\r\n      //   setTodos(todos)\r\n      // }\r\n    }\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/${usern.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n\r\n      })\r\n      // .then(response => {\r\n      if (response.ok) {\r\n        console.log(response.status); // הדפסת הסטטוס\r\n        const newData = await response.json(); // מחזיר פרומיס עם תוכן התשובה בפורמט JSON\r\n        localStorage.setItem(\"currentTodos\", JSON.stringify(newData));\r\n\r\n        setTodos(newData);\r\n        // } else {\r\n        //   throw new Error('Error: ' + response.status); // זריקת שגיאה אם יש שגיאה בתגובה\r\n        // }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Failed to fetch todos:', error.message);\r\n    }\r\n\r\n  };\r\n  // פונקציה שמבצעת בקשת מחיקה לשרת\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\r\n\r\n      const response = await fetch(`http://localhost:3000/todos/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Todo deleted successfully');\r\n        // fetchTodos();\r\n        setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id)); // עדכון התצוגה לאחר מחיקת המשימה\r\n        localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n\r\n      } else {\r\n        throw new Error('Failed to delete todo');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to delete todo:', error.message);\r\n    }\r\n\r\n  };\r\n  const handleUpdate = (id, compn) => {\r\n    console.log(Todos);\r\n    setTodos(prevTodos => {\r\n      const updatedTodos = prevTodos.map(todo => {\r\n        if (todo.id === id) {\r\n          return { ...todo, completed: compn };\r\n        }\r\n        return todo;\r\n      });\r\n      console.log(updatedTodos);\r\n      return updatedTodos;\r\n    });\r\n  };\r\n\r\n\r\n  const handleSave = async (id, title, completed) => {\r\n    console.log(id, title, completed);\r\n    console.log(editingTodoId);\r\n    console.log(editTitle);\r\n    if (editingTodoId != null) {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/todos/update-title/${editingTodoId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            userId:usern.id,\r\n            title: editTitle,\r\n            completed:completed\r\n          })\r\n        });\r\n        console.log(response);\r\n        if (response.ok) {\r\n          console.log(\"handleSave\");\r\n          const updatedTodo = await response.json();\r\n          console.log(updatedTodo);\r\n          setTodos(prevTodos => {\r\n            return prevTodos.map(todo => {\r\n              if (todo.id === updatedTodo.id) {\r\n                return updatedTodo;\r\n              }\r\n              return todo;\r\n            });\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating data:\", error);\r\n        navigate(\"/error\");\r\n      }\r\n\r\n    }\r\n  };\r\n  const update = async (id, completed) => {\r\n    await setTodos(prevTodos => {\r\n      return prevTodos.map(todo => {\r\n        if (todo.id === id) {\r\n          return { ...todo, completed: completed };\r\n        }\r\n        return todo;\r\n      });\r\n    });\r\n  }\r\n  const handleCheckChange = async (id, completed) => {\r\n    // update();\r\n\r\n    localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n\r\n    console.log(id, completed);\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/todos/update-completed/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          completed: completed,\r\n          // co: editTitle\r\n        })\r\n      });\r\n      if (response.ok) {\r\n        const updatedTodos = await response.json();\r\n        setTodos(prevTodos => {\r\n          return prevTodos.map(todo => {\r\n            if (todo.id === updatedTodos.id) {\r\n              return { ...todo, completed: completed };\r\n            }\r\n            return todo;\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n      navigate(\"/error\");\r\n    }\r\n  };\r\n  const handleEdit = async (id, title) => {\r\n    await setEditingTodoId(id);\r\n    await setEditTitle(title);\r\n    console.log(editTitle);\r\n  };\r\n\r\n  const addTodo = () => {\r\n    console.log(newTodo);\r\n    if (newTodo.trim() !== '') {\r\n\r\n      const url = \"http://localhost:3000/todos\";\r\n      const todo = {\r\n        userId: usern.id,\r\n        title: newTodo,\r\n        completed: 0,\r\n      };\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(todo),\r\n      };\r\n\r\n      fetch(url, requestOptions)\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            console.log(response.json);\r\n            const newTodo = response.json();\r\n            setTodos(prevTodos => [...prevTodos, newTodo]);\r\n            localStorage.setItem(\"currentTodos\", JSON.stringify(Todos));\r\n\r\n            setnewTodo('');\r\n\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding new post:\", error);\r\n          navigate(\"/error\");\r\n        });\r\n    }\r\n    else {\r\n      console.log(\"the title cant be blank\");\r\n    }\r\n  };\r\n  return (\r\n\r\n    <section className={styles[\"todos-select\"]}>\r\n      <div className={styles[\"lists\"]}>\r\n\r\n        <div className={styles[\"todos-list\"]}>\r\n          <input\r\n            type=\"text\"\r\n            value={newTodo}\r\n            onChange={e => setnewTodo(e.target.value)}\r\n          />\r\n          <button onClick={addTodo}>Add Todo</button>\r\n          {Todos.map(todo => (\r\n            <div className={styles[\"todos-item\"]} key={todo.id}>\r\n              <div className={styles[\"todo-case\"]}>\r\n                <input\r\n                  className={styles[\"todos-checkbox\"]}\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  // onChange={(e) => setEditCheck(!e.target.value)}\r\n                  onChange={() => handleCheckChange(todo.id, !todo.completed)}\r\n                />\r\n                <span className={todo.completed ? '' : 'completed'}>\r\n                  {editingTodoId === todo.id ? (\r\n                    <input\r\n                      className={styles[\"todos-input\"]}\r\n                      type=\"text\"\r\n                      value={editTitle}\r\n                      onChange={(e) => setEditTitle(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    todo.title\r\n                  )}\r\n                </span>\r\n                <button onClick={() => handleDelete(todo.id)}>\r\n                  <FaTrash />\r\n                </button>\r\n                <button onClick={() => handleEdit(todo.id, todo.title)}>\r\n                  <FaEdit />\r\n                </button>\r\n                <button onClick={() => handleSave(todo.id, todo.title, todo.completed)}>\r\n                  <FaSave />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}